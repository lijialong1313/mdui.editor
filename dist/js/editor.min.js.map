{"version":3,"file":"editor.min.js","sources":["../../node_modules/mdn-polyfills/CustomEvent.js","../../node_modules/promise-polyfill/src/finally.js","../../node_modules/mdn-polyfills/MouseEvent.js","../../node_modules/promise-polyfill/src/index.js","../../node_modules/promise-polyfill/src/polyfill.js","../../node_modules/mdui.jq/es/utils.js","../../node_modules/mdui.jq/es/functions/each.js","../../node_modules/mdui.jq/es/JQ.js","../../node_modules/mdui.jq/es/$.js","../../node_modules/mdui.jq/es/functions/extend.js","../../node_modules/mdui.jq/es/functions/map.js","../../node_modules/mdui.jq/es/functions/unique.js","../../node_modules/mdui.jq/es/functions/contains.js","../../node_modules/mdui.jq/es/functions/merge.js","../../node_modules/mdui.jq/es/methods/each.js","../../node_modules/mdui.jq/es/methods/addClass.js","../../node_modules/mdui.jq/es/methods/insertBefore.js","../../node_modules/mdui.jq/es/methods/before.js","../../node_modules/mdui.jq/es/methods/map.js","../../node_modules/mdui.jq/es/methods/clone.js","../../node_modules/mdui.jq/es/methods/is.js","../../node_modules/mdui.jq/es/methods/remove.js","../../node_modules/mdui.jq/es/methods/append.js","../../node_modules/mdui.jq/es/methods/attr.js","../../node_modules/mdui.jq/es/methods/children.js","../../node_modules/mdui.jq/es/methods/slice.js","../../node_modules/mdui.jq/es/methods/eq.js","../../node_modules/mdui.jq/es/methods/first.js","../../node_modules/mdui.jq/es/methods/val.js","../../node_modules/mdui.jq/es/methods/last.js","../../node_modules/mdui.jq/es/methods/get.js","../../node_modules/mdui.jq/es/methods/find.js","../../node_modules/mdui.jq/es/methods/utils/event.js","../../node_modules/mdui.jq/es/methods/off.js","../../node_modules/mdui.jq/es/methods/on.js","../../node_modules/mdui.jq/es/methods/appendTo.js","../../src/abstracts/commonAbstract.ts","../../src/command/index.ts","../../src/abstracts/menuAbstract.ts","../../src/abstracts/menuNativeAbstract.ts","../../src/menus/bold.ts","../../node_modules/mdui/es/utils/dom.js","../../node_modules/mdui/es/mdui.js","../../node_modules/mdui.jq/es/methods/width.js","../../node_modules/mdui.jq/es/methods/hasClass.js","../../node_modules/mdui.jq/es/methods/hide.js","../../node_modules/mdui.jq/es/methods/show.js","../../node_modules/mdui/es/jq_extends/methods/transitionEnd.js","../../node_modules/mdui.jq/es/functions/utils/data.js","../../node_modules/mdui.jq/es/functions/data.js","../../node_modules/mdui.jq/es/methods/data.js","../../node_modules/mdui/es/jq_extends/static/hideOverlay.js","../../node_modules/mdui/es/jq_extends/static/lockScreen.js","../../node_modules/mdui/es/jq_extends/methods/reflow.js","../../node_modules/mdui/es/jq_extends/static/showOverlay.js","../../node_modules/mdui/es/jq_extends/static/throttle.js","../../node_modules/mdui/es/jq_extends/static/unlockScreen.js","../../node_modules/mdui.jq/es/methods/trigger.js","../../node_modules/mdui/es/utils/queue.js","../../node_modules/mdui/es/components/dialog/class.js","../../node_modules/mdui/es/utils/componentEvent.js","../../node_modules/mdui/es/components/dialog/index.js","../../node_modules/mdui/es/components/dialog/dialog.js","../../node_modules/mdui/es/components/dialog/confirm.js","../../src/menus/clear_drafts.ts","../../src/utils/str.ts","../../node_modules/mdui.jq/es/methods/add.js","../../src/menus/code.ts","../../src/menus/head.ts","../../node_modules/mdui.jq/es/functions/utils/ajax.js","../../node_modules/mdui.jq/es/functions/ajax.js","../../node_modules/mdui.jq/es/functions/param.js","../../node_modules/mdui.jq/es/methods/utils/dir.js","../../node_modules/mdui.jq/es/methods/next.js","../../node_modules/mdui/es/components/dialog/alert.js","../../node_modules/mdui/es/jq_extends/static/guid.js","../../src/menus/image.ts","../../src/utils/format.ts","../../src/menus/italic.ts","../../node_modules/mdui.jq/es/methods/parent.js","../../node_modules/mdui/es/utils/mutation.js","../../node_modules/mdui/es/jq_extends/methods/mutation.js","../../node_modules/mdui/es/components/textfield/index.js","../../node_modules/mdui/es/global/mutation.js","../../node_modules/mdui/es/components/dialog/prompt.js","../../src/menus/link.ts","../../node_modules/mdui.jq/es/methods/prev.js","../../src/abstracts/menuListAbstract.ts","../../src/menus/ol.ts","../../src/menus/ul.ts","../../src/menus/index.ts","../../src/selection/index.ts","../../src/utils/ua.ts","../../src/utils/paste.ts","../../src/utils/purifier.ts"],"sourcesContent":["!function(){function t(t,e){e=e||{bubbles:!1,cancelable:!1,detail:void 0};var n=document.createEvent(\"CustomEvent\");return n.initCustomEvent(t,e.bubbles,e.cancelable,e.detail),n}\"function\"!=typeof window.CustomEvent&&(t.prototype=window.Event.prototype,window.CustomEvent=t)}();\n","/**\n * @this {Promise}\n */\nfunction finallyConstructor(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      // @ts-ignore\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      // @ts-ignore\n      return constructor.resolve(callback()).then(function() {\n        // @ts-ignore\n        return constructor.reject(reason);\n      });\n    }\n  );\n}\n\nexport default finallyConstructor;\n","!function(){try{return new MouseEvent(\"test\")}catch(e){}var e=function(e,t){t=t||{bubbles:!1,cancelable:!1};var n=document.createEvent(\"MouseEvent\");return n.initMouseEvent(e,t.bubbles,t.cancelable,window,0,t.screenX||0,t.screenY||0,t.clientX||0,t.clientY||0,t.ctrlKey||!1,t.altKey||!1,t.shiftKey||!1,t.metaKey||!1,t.button||0,t.relatedTarget||null),n};e.prototype=Event.prototype,window.MouseEvent=e}();\n","import promiseFinally from './finally';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction isArray(x) {\n  return Boolean(x && typeof x.length !== 'undefined');\n}\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\n/**\n * @constructor\n * @param {Function} fn\n */\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  /** @type {!number} */\n  this._state = 0;\n  /** @type {!boolean} */\n  this._handled = false;\n  /** @type {Promise|undefined} */\n  this._value = undefined;\n  /** @type {!Array<!Function>} */\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\n/**\n * @constructor\n */\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  // @ts-ignore\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = promiseFinally;\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!isArray(arr)) {\n      return reject(new TypeError('Promise.all accepts an array'));\n    }\n\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!isArray(arr)) {\n      return reject(new TypeError('Promise.race accepts an array'));\n    }\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      Promise.resolve(arr[i]).then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  // @ts-ignore\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      // @ts-ignore\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nexport default Promise;\n","import Promise from './index';\nimport promiseFinally from './finally';\n\n/** @suppress {undefinedVars} */\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!('Promise' in globalNS)) {\n  globalNS['Promise'] = Promise;\n} else if (!globalNS.Promise.prototype['finally']) {\n  globalNS.Promise.prototype['finally'] = promiseFinally;\n}\n","function isNodeName(element, name) {\n    return element.nodeName.toLowerCase() === name.toLowerCase();\n}\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\nfunction isString(target) {\n    return typeof target === 'string';\n}\nfunction isNumber(target) {\n    return typeof target === 'number';\n}\nfunction isBoolean(target) {\n    return typeof target === 'boolean';\n}\nfunction isUndefined(target) {\n    return typeof target === 'undefined';\n}\nfunction isNull(target) {\n    return target === null;\n}\nfunction isWindow(target) {\n    return target instanceof Window;\n}\nfunction isDocument(target) {\n    return target instanceof Document;\n}\nfunction isElement(target) {\n    return target instanceof Element;\n}\nfunction isNode(target) {\n    return target instanceof Node;\n}\n/**\n * 是否是 IE 浏览器\n */\nfunction isIE() {\n    // @ts-ignore\n    return !!window.document.documentMode;\n}\nfunction isArrayLike(target) {\n    if (isFunction(target) || isWindow(target)) {\n        return false;\n    }\n    return isNumber(target.length);\n}\nfunction isObjectLike(target) {\n    return typeof target === 'object' && target !== null;\n}\nfunction toElement(target) {\n    return isDocument(target) ? target.documentElement : target;\n}\n/**\n * 把用 - 分隔的字符串转为驼峰（如 box-sizing 转换为 boxSizing）\n * @param string\n */\nfunction toCamelCase(string) {\n    return string\n        .replace(/^-ms-/, 'ms-')\n        .replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\n}\n/**\n * 把驼峰法转为用 - 分隔的字符串（如 boxSizing 转换为 box-sizing）\n * @param string\n */\nfunction toKebabCase(string) {\n    return string.replace(/[A-Z]/g, (replacer) => '-' + replacer.toLowerCase());\n}\n/**\n * 获取元素的样式值\n * @param element\n * @param name\n */\nfunction getComputedStyleValue(element, name) {\n    return window.getComputedStyle(element).getPropertyValue(toKebabCase(name));\n}\n/**\n * 检查元素的 box-sizing 是否是 border-box\n * @param element\n */\nfunction isBorderBox(element) {\n    return getComputedStyleValue(element, 'box-sizing') === 'border-box';\n}\n/**\n * 获取元素的 padding, border, margin 宽度（两侧宽度的和，单位为px）\n * @param element\n * @param direction\n * @param extra\n */\nfunction getExtraWidth(element, direction, extra) {\n    const position = direction === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n    return [0, 1].reduce((prev, _, index) => {\n        let prop = extra + position[index];\n        if (extra === 'border') {\n            prop += 'Width';\n        }\n        return prev + parseFloat(getComputedStyleValue(element, prop) || '0');\n    }, 0);\n}\n/**\n * 获取元素的样式值，对 width 和 height 进行过处理\n * @param element\n * @param name\n */\nfunction getStyle(element, name) {\n    // width、height 属性使用 getComputedStyle 得到的值不准确，需要使用 getBoundingClientRect 获取\n    if (name === 'width' || name === 'height') {\n        const valueNumber = element.getBoundingClientRect()[name];\n        if (isBorderBox(element)) {\n            return `${valueNumber}px`;\n        }\n        return `${valueNumber -\n            getExtraWidth(element, name, 'border') -\n            getExtraWidth(element, name, 'padding')}px`;\n    }\n    return getComputedStyleValue(element, name);\n}\n/**\n * 获取子节点组成的数组\n * @param target\n * @param parent\n */\nfunction getChildNodesArray(target, parent) {\n    const tempParent = document.createElement(parent);\n    tempParent.innerHTML = target;\n    return [].slice.call(tempParent.childNodes);\n}\n/**\n * 始终返回 false 的函数\n */\nfunction returnFalse() {\n    return false;\n}\n/**\n * 数值单位的 CSS 属性\n */\nconst cssNumber = [\n    'animationIterationCount',\n    'columnCount',\n    'fillOpacity',\n    'flexGrow',\n    'flexShrink',\n    'fontWeight',\n    'gridArea',\n    'gridColumn',\n    'gridColumnEnd',\n    'gridColumnStart',\n    'gridRow',\n    'gridRowEnd',\n    'gridRowStart',\n    'lineHeight',\n    'opacity',\n    'order',\n    'orphans',\n    'widows',\n    'zIndex',\n    'zoom',\n];\nexport { isNodeName, isArrayLike, isObjectLike, isFunction, isString, isNumber, isBoolean, isUndefined, isNull, isWindow, isDocument, isElement, isNode, isIE, toElement, toCamelCase, toKebabCase, getComputedStyleValue, isBorderBox, getExtraWidth, getStyle, getChildNodesArray, returnFalse, cssNumber, };\n","import { isArrayLike } from '../utils';\nfunction each(target, callback) {\n    if (isArrayLike(target)) {\n        for (let i = 0; i < target.length; i += 1) {\n            if (callback.call(target[i], i, target[i]) === false) {\n                return target;\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(target);\n        for (let i = 0; i < keys.length; i += 1) {\n            if (callback.call(target[keys[i]], keys[i], target[keys[i]]) === false) {\n                return target;\n            }\n        }\n    }\n    return target;\n}\nexport default each;\n","import each from './functions/each';\n/**\n * 为了使用模块扩充，这里不能使用默认导出\n */\nexport class JQ {\n    constructor(arr) {\n        this.length = 0;\n        if (!arr) {\n            return this;\n        }\n        each(arr, (i, item) => {\n            // @ts-ignore\n            this[i] = item;\n        });\n        this.length = arr.length;\n        return this;\n    }\n}\n","import each from './functions/each';\nimport { JQ } from './JQ';\nimport { getChildNodesArray, isArrayLike, isFunction, isNode, isString, } from './utils';\nfunction get$() {\n    const $ = function (selector) {\n        if (!selector) {\n            return new JQ();\n        }\n        // JQ\n        if (selector instanceof JQ) {\n            return selector;\n        }\n        // function\n        if (isFunction(selector)) {\n            if (/complete|loaded|interactive/.test(document.readyState) &&\n                document.body) {\n                selector.call(document, $);\n            }\n            else {\n                document.addEventListener('DOMContentLoaded', () => selector.call(document, $), false);\n            }\n            return new JQ([document]);\n        }\n        // String\n        if (isString(selector)) {\n            const html = selector.trim();\n            // 根据 HTML 字符串创建 JQ 对象\n            if (html[0] === '<' && html[html.length - 1] === '>') {\n                let toCreate = 'div';\n                const tags = {\n                    li: 'ul',\n                    tr: 'tbody',\n                    td: 'tr',\n                    th: 'tr',\n                    tbody: 'table',\n                    option: 'select',\n                };\n                each(tags, (childTag, parentTag) => {\n                    if (html.indexOf(`<${childTag}`) === 0) {\n                        toCreate = parentTag;\n                        return false;\n                    }\n                    return;\n                });\n                return new JQ(getChildNodesArray(html, toCreate));\n            }\n            // 根据 CSS 选择器创建 JQ 对象\n            const isIdSelector = selector[0] === '#' && !selector.match(/[ .<>:~]/);\n            if (!isIdSelector) {\n                return new JQ(document.querySelectorAll(selector));\n            }\n            const element = document.getElementById(selector.slice(1));\n            if (element) {\n                return new JQ([element]);\n            }\n            return new JQ();\n        }\n        if (isArrayLike(selector) && !isNode(selector)) {\n            return new JQ(selector);\n        }\n        return new JQ([selector]);\n    };\n    $.fn = JQ.prototype;\n    return $;\n}\nconst $ = get$();\nexport default $;\n","import each from '../functions/each';\nimport { isUndefined } from '../utils';\nfunction extend(target, object1, ...objectN) {\n    objectN.unshift(object1);\n    each(objectN, (_, object) => {\n        each(object, (prop, value) => {\n            if (!isUndefined(value)) {\n                target[prop] = value;\n            }\n        });\n    });\n    return target;\n}\nexport default extend;\n","import each from './each';\nfunction map(elements, callback) {\n    let value;\n    const ret = [];\n    each(elements, (i, element) => {\n        value = callback.call(window, element, i);\n        if (value != null) {\n            ret.push(value);\n        }\n    });\n    return [].concat(...ret);\n}\nexport default map;\n","import each from './each';\n/**\n * 过滤掉数组中的重复元素\n * @param arr 数组\n * @example\n```js\nunique([1, 2, 12, 3, 2, 1, 2, 1, 1]);\n// [1, 2, 12, 3]\n```\n */\nfunction unique(arr) {\n    const result = [];\n    each(arr, (_, val) => {\n        if (result.indexOf(val) === -1) {\n            result.push(val);\n        }\n    });\n    return result;\n}\nexport default unique;\n","import { toElement } from '../utils';\n/**\n * 检查 container 元素内是否包含 contains 元素\n * @param container 父元素\n * @param contains 子元素\n * @example\n```js\ncontains( document, document.body ); // true\ncontains( document.getElementById('test'), document ); // false\ncontains( $('.container').get(0), $('.contains').get(0) ); // false\n```\n */\nfunction contains(container, contains) {\n    return container !== contains && toElement(container).contains(contains);\n}\nexport default contains;\n","import each from './each';\n/**\n * 把第二个数组的元素追加到第一个数组中，并返回合并后的数组\n * @param first 第一个数组\n * @param second 该数组的元素将被追加到第一个数组中\n * @example\n```js\nmerge( [ 0, 1, 2 ], [ 2, 3, 4 ] )\n// [ 0, 1, 2, 2, 3, 4 ]\n```\n */\nfunction merge(first, second) {\n    each(second, (_, value) => {\n        first.push(value);\n    });\n    return first;\n}\nexport default merge;\n","import $ from '../$';\nimport each from '../functions/each';\n$.fn.each = function (callback) {\n    return each(this, callback);\n};\n","import $ from '../$';\nimport each from '../functions/each';\nimport { isElement, isFunction } from '../utils';\nimport './each';\neach(['add', 'remove', 'toggle'], (_, name) => {\n    $.fn[`${name}Class`] = function (className) {\n        if (name === 'remove' && !arguments.length) {\n            return this.each((_, element) => {\n                element.setAttribute('class', '');\n            });\n        }\n        return this.each((i, element) => {\n            if (!isElement(element)) {\n                return;\n            }\n            const classes = (isFunction(className)\n                ? className.call(element, i, element.getAttribute('class') || '')\n                : className)\n                .split(' ')\n                .filter((name) => name);\n            each(classes, (_, cls) => {\n                element.classList[name](cls);\n            });\n        });\n    };\n});\n","import $ from '../$';\nimport each from '../functions/each';\nimport './each';\neach(['insertBefore', 'insertAfter'], (nameIndex, name) => {\n    $.fn[name] = function (target) {\n        const $element = nameIndex ? $(this.get().reverse()) : this; // 顺序和 jQuery 保持一致\n        const $target = $(target);\n        const result = [];\n        $target.each((index, target) => {\n            if (!target.parentNode) {\n                return;\n            }\n            $element.each((_, element) => {\n                const newItem = index\n                    ? element.cloneNode(true)\n                    : element;\n                const existingItem = nameIndex ? target.nextSibling : target;\n                result.push(newItem);\n                target.parentNode.insertBefore(newItem, existingItem);\n            });\n        });\n        return $(nameIndex ? result.reverse() : result);\n    };\n});\n","import $ from '../$';\nimport each from '../functions/each';\nimport { getChildNodesArray, isFunction, isString, isElement } from '../utils';\nimport './each';\nimport './insertAfter';\nimport './insertBefore';\n/**\n * 是否不是 HTML 字符串（包裹在 <> 中）\n * @param target\n */\nfunction isPlainText(target) {\n    return (isString(target) && (target[0] !== '<' || target[target.length - 1] !== '>'));\n}\neach(['before', 'after'], (nameIndex, name) => {\n    $.fn[name] = function (...args) {\n        // after 方法，多个参数需要按参数顺序添加到元素后面，所以需要将参数顺序反向处理\n        if (nameIndex === 1) {\n            args = args.reverse();\n        }\n        return this.each((index, element) => {\n            const targets = isFunction(args[0])\n                ? [args[0].call(element, index, element.innerHTML)]\n                : args;\n            each(targets, (_, target) => {\n                let $target;\n                if (isPlainText(target)) {\n                    $target = $(getChildNodesArray(target, 'div'));\n                }\n                else if (index && isElement(target)) {\n                    $target = $(target.cloneNode(true));\n                }\n                else {\n                    $target = $(target);\n                }\n                $target[nameIndex ? 'insertAfter' : 'insertBefore'](element);\n            });\n        });\n    };\n});\n","import $ from '../$';\nimport map from '../functions/map';\nimport { JQ } from '../JQ';\n$.fn.map = function (callback) {\n    return new JQ(map(this, (element, i) => callback.call(element, i, element)));\n};\n","import $ from '../$';\nimport './map';\n$.fn.clone = function () {\n    return this.map(function () {\n        return this.cloneNode(true);\n    });\n};\n","import $ from '../$';\nimport { isDocument, isFunction, isString, isWindow } from '../utils';\nimport './each';\n$.fn.is = function (selector) {\n    let isMatched = false;\n    if (isFunction(selector)) {\n        this.each((index, element) => {\n            if (selector.call(element, index, element)) {\n                isMatched = true;\n            }\n        });\n        return isMatched;\n    }\n    if (isString(selector)) {\n        this.each((_, element) => {\n            if (isDocument(element) || isWindow(element)) {\n                return;\n            }\n            // @ts-ignore\n            const matches = element.matches || element.msMatchesSelector;\n            if (matches.call(element, selector)) {\n                isMatched = true;\n            }\n        });\n        return isMatched;\n    }\n    const $compareWith = $(selector);\n    this.each((_, element) => {\n        $compareWith.each((_, compare) => {\n            if (element === compare) {\n                isMatched = true;\n            }\n        });\n    });\n    return isMatched;\n};\n","import $ from '../$';\nimport './each';\nimport './is';\n$.fn.remove = function (selector) {\n    return this.each((_, element) => {\n        if (element.parentNode && (!selector || $(element).is(selector))) {\n            element.parentNode.removeChild(element);\n        }\n    });\n};\n","import $ from '../$';\nimport each from '../functions/each';\nimport { isFunction, isString } from '../utils';\nimport './after';\nimport './before';\nimport './clone';\nimport './each';\nimport './map';\nimport './remove';\neach(['prepend', 'append'], (nameIndex, name) => {\n    $.fn[name] = function (...args) {\n        return this.each((index, element) => {\n            const childNodes = element.childNodes;\n            const childLength = childNodes.length;\n            const child = childLength\n                ? childNodes[nameIndex ? childLength - 1 : 0]\n                : document.createElement('div');\n            if (!childLength) {\n                element.appendChild(child);\n            }\n            let contents = isFunction(args[0])\n                ? [args[0].call(element, index, element.innerHTML)]\n                : args;\n            // 如果不是字符串，则仅第一个元素使用原始元素，其他的都克隆自第一个元素\n            if (index) {\n                contents = contents.map((content) => {\n                    return isString(content) ? content : $(content).clone();\n                });\n            }\n            $(child)[nameIndex ? 'after' : 'before'](...contents);\n            if (!childLength) {\n                element.removeChild(child);\n            }\n        });\n    };\n});\n","import $ from '../$';\nimport each from '../functions/each';\nimport { cssNumber, getStyle, isElement, isFunction, isNull, isNumber, isObjectLike, isUndefined, toCamelCase, } from '../utils';\nimport './each';\neach(['attr', 'prop', 'css'], (nameIndex, name) => {\n    function set(element, key, value) {\n        // 值为 undefined 时，不修改\n        if (isUndefined(value)) {\n            return;\n        }\n        switch (nameIndex) {\n            // attr\n            case 0:\n                if (isNull(value)) {\n                    element.removeAttribute(key);\n                }\n                else {\n                    element.setAttribute(key, value);\n                }\n                break;\n            // prop\n            case 1:\n                // @ts-ignore\n                element[key] = value;\n                break;\n            // css\n            default:\n                key = toCamelCase(key);\n                // @ts-ignore\n                element.style[key] = isNumber(value)\n                    ? `${value}${cssNumber.indexOf(key) > -1 ? '' : 'px'}`\n                    : value;\n                break;\n        }\n    }\n    function get(element, key) {\n        switch (nameIndex) {\n            // attr\n            case 0:\n                // 属性不存在时，原生 getAttribute 方法返回 null，而 jquery 返回 undefined。这里和 jquery 保持一致\n                const value = element.getAttribute(key);\n                return isNull(value) ? undefined : value;\n            // prop\n            case 1:\n                // @ts-ignore\n                return element[key];\n            // css\n            default:\n                return getStyle(element, key);\n        }\n    }\n    $.fn[name] = function (key, value) {\n        if (isObjectLike(key)) {\n            each(key, (k, v) => {\n                // @ts-ignore\n                this[name](k, v);\n            });\n            return this;\n        }\n        if (arguments.length === 1) {\n            const element = this[0];\n            return isElement(element) ? get(element, key) : undefined;\n        }\n        return this.each((i, element) => {\n            set(element, key, isFunction(value) ? value.call(element, i, get(element, key)) : value);\n        });\n    };\n});\n","import $ from '../$';\nimport each from '../functions/each';\nimport unique from '../functions/unique';\nimport { JQ } from '../JQ';\nimport { isElement } from '../utils';\nimport './each';\nimport './is';\n$.fn.children = function (selector) {\n    const children = [];\n    this.each((_, element) => {\n        each(element.childNodes, (__, childNode) => {\n            if (!isElement(childNode)) {\n                return;\n            }\n            if (!selector || $(childNode).is(selector)) {\n                children.push(childNode);\n            }\n        });\n    });\n    return new JQ(unique(children));\n};\n","import $ from '../$';\nimport { JQ } from '../JQ';\n$.fn.slice = function (...args) {\n    return new JQ([].slice.apply(this, args));\n};\n","import $ from '../$';\nimport { JQ } from '../JQ';\nimport './slice';\n$.fn.eq = function (index) {\n    const ret = index === -1 ? this.slice(index) : this.slice(index, +index + 1);\n    return new JQ(ret);\n};\n","import $ from '../$';\nimport './eq';\n$.fn.first = function () {\n    return this.eq(0);\n};\n","import $ from '../$';\nimport each from '../functions/each';\nimport map from '../functions/map';\nimport { isElement, isFunction, isUndefined, toElement } from '../utils';\nimport './each';\nimport './is';\neach(['val', 'html', 'text'], (nameIndex, name) => {\n    const props = {\n        0: 'value',\n        1: 'innerHTML',\n        2: 'textContent',\n    };\n    const propName = props[nameIndex];\n    function get($elements) {\n        // text() 获取所有元素的文本\n        if (nameIndex === 2) {\n            // @ts-ignore\n            return map($elements, (element) => toElement(element)[propName]).join('');\n        }\n        // 空集合时，val() 和 html() 返回 undefined\n        if (!$elements.length) {\n            return undefined;\n        }\n        // val() 和 html() 仅获取第一个元素的内容\n        const firstElement = $elements[0];\n        // select multiple 返回数组\n        if (nameIndex === 0 && $(firstElement).is('select[multiple]')) {\n            return map($(firstElement).find('option:checked'), (element) => element.value);\n        }\n        // @ts-ignore\n        return firstElement[propName];\n    }\n    function set(element, value) {\n        // text() 和 html() 赋值为 undefined，则保持原内容不变\n        // val() 赋值为 undefined 则赋值为空\n        if (isUndefined(value)) {\n            if (nameIndex !== 0) {\n                return;\n            }\n            value = '';\n        }\n        if (nameIndex === 1 && isElement(value)) {\n            value = value.outerHTML;\n        }\n        // @ts-ignore\n        element[propName] = value;\n    }\n    $.fn[name] = function (value) {\n        // 获取值\n        if (!arguments.length) {\n            return get(this);\n        }\n        // 设置值\n        return this.each((i, element) => {\n            const computedValue = isFunction(value)\n                ? value.call(element, i, get($(element)))\n                : value;\n            // value 是数组，则选中数组中的元素，反选不在数组中的元素\n            if (nameIndex === 0 && Array.isArray(computedValue)) {\n                // select[multiple]\n                if ($(element).is('select[multiple]')) {\n                    map($(element).find('option'), (option) => (option.selected =\n                        computedValue.indexOf(option.value) >\n                            -1));\n                }\n                // 其他 checkbox, radio 等元素\n                else {\n                    element.checked =\n                        computedValue.indexOf(element.value) > -1;\n                }\n            }\n            else {\n                set(element, computedValue);\n            }\n        });\n    };\n});\n","import $ from '../$';\nimport './eq';\n$.fn.last = function () {\n    return this.eq(-1);\n};\n","import $ from '../$';\n$.fn.get = function (index) {\n    return index === undefined\n        ? [].slice.call(this)\n        : this[index >= 0 ? index : index + this.length];\n};\n","import $ from '../$';\nimport merge from '../functions/merge';\nimport { JQ } from '../JQ';\nimport './each';\nimport './get';\n$.fn.find = function (selector) {\n    const foundElements = [];\n    this.each((_, element) => {\n        merge(foundElements, $(element.querySelectorAll(selector)).get());\n    });\n    return new JQ(foundElements);\n};\n","import $ from '../../$';\nimport contains from '../../functions/contains';\nimport { isObjectLike } from '../../utils';\nimport '../find';\n// 存储事件\nconst handlers = {};\n// 元素ID\nlet mduiElementId = 1;\n/**\n * 为元素赋予一个唯一的ID\n */\nfunction getElementId(element) {\n    const key = '_mduiEventId';\n    // @ts-ignore\n    if (!element[key]) {\n        // @ts-ignore\n        element[key] = ++mduiElementId;\n    }\n    // @ts-ignore\n    return element[key];\n}\n/**\n * 解析事件名中的命名空间\n */\nfunction parse(type) {\n    const parts = type.split('.');\n    return {\n        type: parts[0],\n        ns: parts.slice(1).sort().join(' '),\n    };\n}\n/**\n * 命名空间匹配规则\n */\nfunction matcherFor(ns) {\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)');\n}\n/**\n * 获取匹配的事件\n * @param element\n * @param type\n * @param func\n * @param selector\n */\nfunction getHandlers(element, type, func, selector) {\n    const event = parse(type);\n    return (handlers[getElementId(element)] || []).filter((handler) => handler &&\n        (!event.type || handler.type === event.type) &&\n        (!event.ns || matcherFor(event.ns).test(handler.ns)) &&\n        (!func || getElementId(handler.func) === getElementId(func)) &&\n        (!selector || handler.selector === selector));\n}\n/**\n * 添加事件监听\n * @param element\n * @param types\n * @param func\n * @param data\n * @param selector\n */\nfunction add(element, types, func, data, selector) {\n    const elementId = getElementId(element);\n    if (!handlers[elementId]) {\n        handlers[elementId] = [];\n    }\n    // 传入 data.useCapture 来设置 useCapture: true\n    let useCapture = false;\n    if (isObjectLike(data) && data.useCapture) {\n        useCapture = true;\n    }\n    types.split(' ').forEach((type) => {\n        if (!type) {\n            return;\n        }\n        const event = parse(type);\n        function callFn(e, elem) {\n            // 因为鼠标事件模拟事件的 detail 属性是只读的，因此在 e._detail 中存储参数\n            const result = func.apply(elem, \n            // @ts-ignore\n            e._detail === undefined ? [e] : [e].concat(e._detail));\n            if (result === false) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n        function proxyFn(e) {\n            // @ts-ignore\n            if (e._ns && !matcherFor(e._ns).test(event.ns)) {\n                return;\n            }\n            // @ts-ignore\n            e._data = data;\n            if (selector) {\n                // 事件代理\n                $(element)\n                    .find(selector)\n                    .get()\n                    .reverse()\n                    .forEach((elem) => {\n                    if (elem === e.target ||\n                        contains(elem, e.target)) {\n                        callFn(e, elem);\n                    }\n                });\n            }\n            else {\n                // 不使用事件代理\n                callFn(e, element);\n            }\n        }\n        const handler = {\n            type: event.type,\n            ns: event.ns,\n            func,\n            selector,\n            id: handlers[elementId].length,\n            proxy: proxyFn,\n        };\n        handlers[elementId].push(handler);\n        element.addEventListener(handler.type, proxyFn, useCapture);\n    });\n}\n/**\n * 移除事件监听\n * @param element\n * @param types\n * @param func\n * @param selector\n */\nfunction remove(element, types, func, selector) {\n    const handlersInElement = handlers[getElementId(element)] || [];\n    const removeEvent = (handler) => {\n        delete handlersInElement[handler.id];\n        element.removeEventListener(handler.type, handler.proxy, false);\n    };\n    if (!types) {\n        handlersInElement.forEach((handler) => removeEvent(handler));\n    }\n    else {\n        types.split(' ').forEach((type) => {\n            if (type) {\n                getHandlers(element, type, func, selector).forEach((handler) => removeEvent(handler));\n            }\n        });\n    }\n}\nexport { parse, add, remove };\n","import $ from '../$';\nimport each from '../functions/each';\nimport { isFunction, isObjectLike, returnFalse } from '../utils';\nimport './each';\nimport { remove } from './utils/event';\n$.fn.off = function (types, selector, callback) {\n    // types 是对象\n    if (isObjectLike(types)) {\n        each(types, (type, fn) => {\n            // this.off('click', undefined, function () {})\n            // this.off('click', '.box', function () {})\n            this.off(type, selector, fn);\n        });\n        return this;\n    }\n    // selector 不存在\n    if (selector === false || isFunction(selector)) {\n        callback = selector;\n        selector = undefined;\n        // this.off('click', undefined, function () {})\n    }\n    // callback 传入 `false`，相当于 `return false`\n    if (callback === false) {\n        callback = returnFalse;\n    }\n    return this.each(function () {\n        remove(this, types, callback, selector);\n    });\n};\n","import $ from '../$';\nimport each from '../functions/each';\nimport { isObjectLike, isString, returnFalse } from '../utils';\nimport './each';\nimport './off';\nimport { add } from './utils/event';\n$.fn.on = function (types, selector, data, callback, one) {\n    // types 可以是 type/func 对象\n    if (isObjectLike(types)) {\n        // (types-Object, selector, data)\n        if (!isString(selector)) {\n            // (types-Object, data)\n            data = data || selector;\n            selector = undefined;\n        }\n        each(types, (type, fn) => {\n            // selector 和 data 都可能是 undefined\n            // @ts-ignore\n            this.on(type, selector, data, fn, one);\n        });\n        return this;\n    }\n    if (data == null && callback == null) {\n        // (types, fn)\n        callback = selector;\n        data = selector = undefined;\n    }\n    else if (callback == null) {\n        if (isString(selector)) {\n            // (types, selector, fn)\n            callback = data;\n            data = undefined;\n        }\n        else {\n            // (types, data, fn)\n            callback = data;\n            data = selector;\n            selector = undefined;\n        }\n    }\n    if (callback === false) {\n        callback = returnFalse;\n    }\n    else if (!callback) {\n        return this;\n    }\n    // $().one()\n    if (one) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const _this = this;\n        const origCallback = callback;\n        callback = function (event) {\n            _this.off(event.type, selector, callback);\n            // eslint-disable-next-line prefer-rest-params\n            return origCallback.apply(this, arguments);\n        };\n    }\n    return this.each(function () {\n        add(this, types, callback, data, selector);\n    });\n};\n","import $ from '../$';\nimport each from '../functions/each';\nimport './insertAfter';\nimport './insertBefore';\nimport './map';\nimport './remove';\neach(['appendTo', 'prependTo'], (nameIndex, name) => {\n    $.fn[name] = function (target) {\n        const extraChilds = [];\n        const $target = $(target).map((_, element) => {\n            const childNodes = element.childNodes;\n            const childLength = childNodes.length;\n            if (childLength) {\n                return childNodes[nameIndex ? 0 : childLength - 1];\n            }\n            const child = document.createElement('div');\n            element.appendChild(child);\n            extraChilds.push(child);\n            return child;\n        });\n        const $result = this[nameIndex ? 'insertBefore' : 'insertAfter']($target);\n        $(extraChilds).remove();\n        return $result;\n    };\n});\n","import { JQ } from 'mdui.jq/es/JQ';\nimport Command from '../command/index';\nimport Editor from '../index';\nimport Selection from '../selection/index';\n\nabstract class CommonAbstract {\n  /**\n   * 编辑器实例\n   */\n  protected editor: Editor;\n\n  /**\n   * @param editor 编辑器实例\n   */\n  public constructor(editor: Editor) {\n    this.editor = editor;\n  }\n\n  /**\n   * 工具栏 JQ 对象\n   */\n  get $toolbar(): JQ {\n    return this.editor.$toolbar;\n  }\n\n  /**\n   * 内容区域 JQ 对象\n   */\n  get $container(): JQ {\n    return this.editor.$container;\n  }\n\n  /**\n   * 选区实例\n   */\n  get selection(): Selection {\n    return this.editor.selection;\n  }\n\n  /**\n   * 命令实例\n   */\n  get command(): Command {\n    return this.editor.command;\n  }\n}\n\nexport default CommonAbstract;\n","import $ from 'mdui.jq/es/$';\nimport { JQ } from 'mdui.jq/es/JQ';\nimport 'mdui.jq/es/methods/appendTo';\nimport 'mdui.jq/es/methods/insertAfter';\nimport 'mdui.jq/es/methods/remove';\nimport CommonAbstract from '../abstracts/commonAbstract';\n\n/**\n * 封装 document.execCommand 命令\n */\nclass Command extends CommonAbstract {\n  /**\n   * 执行命令\n   * @param name\n   * @param value\n   */\n  do(name: string, value?: any): void {\n    // 如果无选区，忽略\n    if (!this.selection.getRange()) {\n      return;\n    }\n\n    // 恢复选区\n    this.selection.restore();\n\n    const customName = name;\n\n    // 执行命令\n    // @ts-ignore\n    if (this[customName]) {\n      // @ts-ignore\n      this[customName](value);\n    } else {\n      document.execCommand(name, false, value);\n    }\n\n    // 修改菜单状态\n    this.editor.menus.changeStatus();\n\n    // 最后，恢复选区保证光标在原来的位置闪烁\n    this.selection.saveRange();\n    this.selection.restore();\n\n    // 触发 onchange\n    if (this.editor.change) {\n      this.editor.change();\n    }\n  }\n\n  /**\n   * 自定义 insertHTML 事件，在当前选区中插入指定 HTML\n   * @param html\n   */\n  // @ts-ignore\n  private insertHTML(html: string): void {\n    // W3C\n    if (document.queryCommandSupported('insertHTML')) {\n      document.execCommand('insertHTML', false, html);\n      return;\n    }\n\n    const range = this.selection.getRange()!;\n\n    if (range.insertNode) {\n      // IE\n      range.deleteContents();\n      range.insertNode($(html)[0]);\n      // @ts-ignore\n    } else if (range.pasteHTML) {\n      // IE <= 10\n      // @ts-ignore\n      range.pasteHTML(html);\n    }\n  }\n\n  /**\n   * 用指定 HTML 替换当前选区的 root 元素\n   * @param html\n   */\n  // @ts-ignore\n  private replaceRoot(html: string): void {\n    const $oldElem = this.selection.getRootElem();\n    const $newElem = $(html).insertAfter($oldElem);\n\n    $oldElem.remove();\n\n    this.selection.createRangeByElem($newElem, false, true);\n    this.selection.restore();\n  }\n\n  /**\n   * 在当前选区的 root 元素后面插入指定 html\n   * @param html\n   */\n  // @ts-ignore\n  private insertAfterRoot(html: string): void {\n    const $oldElem = this.selection.getRootElem();\n    const $newElem = $(html).insertAfter($oldElem);\n\n    this.selection.createRangeByElem($newElem, false, true);\n    this.selection.restore();\n  }\n\n  /**\n   * 在当前 $content 的最后追加 html\n   * @param html\n   */\n  // @ts-ignore\n  private appendHTML(html: string): void {\n    const $newElem = $(html).appendTo(this.$container);\n\n    this.selection.createRangeByElem($newElem, false, true);\n    this.selection.restore();\n  }\n\n  /**\n   * 插入 elem\n   * @param $elem\n   */\n  // @ts-ignore\n  private insertElem($elem: JQ): void {\n    const range = this.selection.getRange()!;\n\n    if (range.insertNode) {\n      range.deleteContents();\n      range.insertNode($elem[0]);\n    }\n  }\n}\n\nexport default Command;\n","import { JQ } from 'mdui.jq/es/JQ';\nimport Editor from '../index';\nimport CommonAbstract from './commonAbstract';\n\nabstract class MenuAbstract extends CommonAbstract {\n  /**\n   * 按钮图标\n   */\n  static icon = '';\n\n  /**\n   * 按钮名称\n   */\n  static title = '';\n\n  /**\n   * 激活按钮时，需要禁用的其他按钮\n   */\n  static disable: string[] = [];\n\n  /**\n   * 按钮元素的 JQ 对象\n   */\n  public $button: JQ;\n\n  /**\n   * @param editor 编辑器实例\n   * @param $button 按钮 JQ 对象\n   */\n  protected constructor(editor: Editor, $button: JQ) {\n    super(editor);\n    this.$button = $button;\n  }\n\n  /**\n   * 点击按钮时\n   */\n  public abstract onclick(): void;\n\n  /**\n   * 按钮是否激活\n   */\n  public isActive(): boolean {\n    return false;\n  }\n}\n\nexport default MenuAbstract;\n","import MenuAbstract from './menuAbstract';\n\n/**\n * 原生命令抽象类\n */\nabstract class MenuNativeAbstract extends MenuAbstract {\n  /**\n   * 获取原生命令的名称\n   */\n  protected abstract getCommandName(): string;\n\n  /**\n   * 在非 webkit 浏览器中空白元素的标签\n   */\n  protected abstract getElementName(): string;\n\n  public onclick(): void {\n    const isSelectionEmpty = this.selection.isEmpty();\n\n    if (isSelectionEmpty) {\n      // 选区是空的，插入并选中一个“空白”\n      this.selection.createEmptyRange(this.getElementName());\n    }\n\n    // 执行 bold 命令\n    this.command.do(this.getCommandName());\n\n    if (isSelectionEmpty) {\n      // 需要将选区折叠起来\n      this.selection.collapseRange();\n      this.selection.restore();\n    }\n  }\n\n  public isActive(): boolean {\n    return document.queryCommandState(this.getCommandName());\n  }\n}\n\nexport default MenuNativeAbstract;\n","import MenuNativeAbstract from '../abstracts/menuNativeAbstract';\n\n/**\n * 加粗\n */\nclass Bold extends MenuNativeAbstract {\n  static icon = 'format_bold';\n  static title = '粗体';\n  static disable = ['image'];\n\n  protected getCommandName(): string {\n    return 'bold';\n  }\n\n  protected getElementName(): string {\n    return 'strong';\n  }\n}\n\nexport default Bold;\n","import $ from 'mdui.jq/es/$';\nconst $document = $(document);\nconst $window = $(window);\nconst $body = $('body');\nexport { $document, $window, $body };\n","import $ from 'mdui.jq/es/$';\nimport { $body } from './utils/dom';\n// 避免页面加载完后直接执行css动画\n// https://css-tricks.com/transitions-only-after-page-load/\nsetTimeout(() => $body.addClass('mdui-loaded'));\nconst mdui = {\n    $: $,\n};\nexport default mdui;\n","import $ from '../$';\nimport each from '../functions/each';\nimport { isBoolean, isDocument, isFunction, isWindow, toElement, isBorderBox, getExtraWidth, getComputedStyleValue, isIE, } from '../utils';\nimport './css';\nimport './each';\n/**\n * 值上面的 padding、border、margin 处理\n * @param element\n * @param name\n * @param value\n * @param funcIndex\n * @param includeMargin\n * @param multiply\n */\nfunction handleExtraWidth(element, name, value, funcIndex, includeMargin, multiply) {\n    // 获取元素的 padding, border, margin 宽度（两侧宽度的和）\n    const getExtraWidthValue = (extra) => {\n        return (getExtraWidth(element, name.toLowerCase(), extra) *\n            multiply);\n    };\n    if (funcIndex === 2 && includeMargin) {\n        value += getExtraWidthValue('margin');\n    }\n    if (isBorderBox(element)) {\n        // IE 为 box-sizing: border-box 时，得到的值不含 border 和 padding，这里先修复\n        // 仅获取时需要处理，multiply === 1 为 get\n        if (isIE() && multiply === 1) {\n            value += getExtraWidthValue('border');\n            value += getExtraWidthValue('padding');\n        }\n        if (funcIndex === 0) {\n            value -= getExtraWidthValue('border');\n        }\n        if (funcIndex === 1) {\n            value -= getExtraWidthValue('border');\n            value -= getExtraWidthValue('padding');\n        }\n    }\n    else {\n        if (funcIndex === 0) {\n            value += getExtraWidthValue('padding');\n        }\n        if (funcIndex === 2) {\n            value += getExtraWidthValue('border');\n            value += getExtraWidthValue('padding');\n        }\n    }\n    return value;\n}\n/**\n * 获取元素的样式值\n * @param element\n * @param name\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\n * @param includeMargin\n */\nfunction get(element, name, funcIndex, includeMargin) {\n    const clientProp = `client${name}`;\n    const scrollProp = `scroll${name}`;\n    const offsetProp = `offset${name}`;\n    const innerProp = `inner${name}`;\n    // $(window).width()\n    if (isWindow(element)) {\n        // outerWidth, outerHeight 需要包含滚动条的宽度\n        return funcIndex === 2\n            ? element[innerProp]\n            : toElement(document)[clientProp];\n    }\n    // $(document).width()\n    if (isDocument(element)) {\n        const doc = toElement(element);\n        return Math.max(\n        // @ts-ignore\n        element.body[scrollProp], doc[scrollProp], \n        // @ts-ignore\n        element.body[offsetProp], doc[offsetProp], doc[clientProp]);\n    }\n    const value = parseFloat(getComputedStyleValue(element, name.toLowerCase()) || '0');\n    return handleExtraWidth(element, name, value, funcIndex, includeMargin, 1);\n}\n/**\n * 设置元素的样式值\n * @param element\n * @param elementIndex\n * @param name\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\n * @param includeMargin\n * @param value\n */\nfunction set(element, elementIndex, name, funcIndex, includeMargin, value) {\n    let computedValue = isFunction(value)\n        ? value.call(element, elementIndex, get(element, name, funcIndex, includeMargin))\n        : value;\n    if (computedValue == null) {\n        return;\n    }\n    const $element = $(element);\n    const dimension = name.toLowerCase();\n    // 特殊的值，不需要计算 padding、border、margin\n    if (['auto', 'inherit', ''].indexOf(computedValue) > -1) {\n        $element.css(dimension, computedValue);\n        return;\n    }\n    // 其他值保留原始单位。注意：如果不使用 px 作为单位，则算出的值一般是不准确的\n    const suffix = computedValue.toString().replace(/\\b[0-9.]*/, '');\n    const numerical = parseFloat(computedValue);\n    computedValue =\n        handleExtraWidth(element, name, numerical, funcIndex, includeMargin, -1) +\n            (suffix || 'px');\n    $element.css(dimension, computedValue);\n}\neach(['Width', 'Height'], (_, name) => {\n    each([`inner${name}`, name.toLowerCase(), `outer${name}`], (funcIndex, funcName) => {\n        $.fn[funcName] = function (margin, value) {\n            // 是否是赋值操作\n            const isSet = arguments.length && (funcIndex < 2 || !isBoolean(margin));\n            const includeMargin = margin === true || value === true;\n            // 获取第一个元素的值\n            if (!isSet) {\n                return this.length\n                    ? get(this[0], name, funcIndex, includeMargin)\n                    : undefined;\n            }\n            // 设置每个元素的值\n            return this.each((index, element) => set(element, index, name, funcIndex, includeMargin, margin));\n        };\n    });\n});\n","import $ from '../$';\n$.fn.hasClass = function (className) {\n    return this[0].classList.contains(className);\n};\n","import $ from '../$';\nimport './each';\n$.fn.hide = function () {\n    return this.each(function () {\n        this.style.display = 'none';\n    });\n};\n","import $ from '../$';\nimport { getStyle } from '../utils';\nimport './each';\nconst elementDisplay = {};\n/**\n * 获取元素的初始 display 值，用于 .show() 方法\n * @param nodeName\n */\nfunction defaultDisplay(nodeName) {\n    let element;\n    let display;\n    if (!elementDisplay[nodeName]) {\n        element = document.createElement(nodeName);\n        document.body.appendChild(element);\n        display = getStyle(element, 'display');\n        element.parentNode.removeChild(element);\n        if (display === 'none') {\n            display = 'block';\n        }\n        elementDisplay[nodeName] = display;\n    }\n    return elementDisplay[nodeName];\n}\n/**\n * 显示指定元素\n * @returns {JQ}\n */\n$.fn.show = function () {\n    return this.each(function () {\n        if (this.style.display === 'none') {\n            this.style.display = '';\n        }\n        if (getStyle(this, 'display') === 'none') {\n            this.style.display = defaultDisplay(this.nodeName);\n        }\n    });\n};\n","import $ from 'mdui.jq/es/$';\nimport each from 'mdui.jq/es/functions/each';\nimport 'mdui.jq/es/methods/on';\nimport 'mdui.jq/es/methods/off';\n$.fn.transitionEnd = function (callback) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n    const events = ['webkitTransitionEnd', 'transitionend'];\n    function fireCallback(e) {\n        if (e.target !== this) {\n            return;\n        }\n        // @ts-ignore\n        callback.call(this, e);\n        each(events, (_, event) => {\n            that.off(event, fireCallback);\n        });\n    }\n    each(events, (_, event) => {\n        that.on(event, fireCallback);\n    });\n    return this;\n};\n","const dataNS = '_mduiElementDataStorage';\nexport default dataNS;\n","import { isObjectLike, isUndefined, toCamelCase } from '../utils';\nimport each from './each';\nimport dataNS from './utils/data';\n/**\n * 在元素上设置键值对数据\n * @param element\n * @param object\n */\nfunction setObjectToElement(element, object) {\n    // @ts-ignore\n    if (!element[dataNS]) {\n        // @ts-ignore\n        element[dataNS] = {};\n    }\n    each(object, (key, value) => {\n        // @ts-ignore\n        element[dataNS][toCamelCase(key)] = value;\n    });\n}\nfunction data(element, key, value) {\n    // 根据键值对设置值\n    // data(element, { 'key' : 'value' })\n    if (isObjectLike(key)) {\n        setObjectToElement(element, key);\n        return key;\n    }\n    // 根据 key、value 设置值\n    // data(element, 'key', 'value')\n    if (!isUndefined(value)) {\n        setObjectToElement(element, { [key]: value });\n        return value;\n    }\n    // 获取所有值\n    // data(element)\n    if (isUndefined(key)) {\n        // @ts-ignore\n        return element[dataNS] ? element[dataNS] : {};\n    }\n    // 从 dataNS 中获取指定值\n    // data(element, 'key')\n    key = toCamelCase(key);\n    // @ts-ignore\n    if (element[dataNS] && key in element[dataNS]) {\n        // @ts-ignore\n        return element[dataNS][key];\n    }\n    return undefined;\n}\nexport default data;\n","import $ from '../$';\nimport data from '../functions/data';\nimport { isObjectLike, isString, isUndefined, toCamelCase, toKebabCase, } from '../utils';\nimport './each';\nconst rbrace = /^(?:{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\n// 从 `data-*` 中获取的值，需要经过该函数转换\nfunction getData(value) {\n    if (value === 'true') {\n        return true;\n    }\n    if (value === 'false') {\n        return false;\n    }\n    if (value === 'null') {\n        return null;\n    }\n    if (value === +value + '') {\n        return +value;\n    }\n    if (rbrace.test(value)) {\n        return JSON.parse(value);\n    }\n    return value;\n}\n// 若 value 不存在，则从 `data-*` 中获取值\nfunction dataAttr(element, key, value) {\n    if (isUndefined(value) && element.nodeType === 1) {\n        const name = 'data-' + toKebabCase(key);\n        value = element.getAttribute(name);\n        if (isString(value)) {\n            try {\n                value = getData(value);\n            }\n            catch (e) { }\n        }\n        else {\n            value = undefined;\n        }\n    }\n    return value;\n}\n$.fn.data = function (key, value) {\n    // 获取所有值\n    if (isUndefined(key)) {\n        if (!this.length) {\n            return undefined;\n        }\n        const element = this[0];\n        const resultData = data(element);\n        // window, document 上不存在 `data-*` 属性\n        if (element.nodeType !== 1) {\n            return resultData;\n        }\n        // 从 `data-*` 中获取值\n        const attrs = element.attributes;\n        let i = attrs.length;\n        while (i--) {\n            if (attrs[i]) {\n                let name = attrs[i].name;\n                if (name.indexOf('data-') === 0) {\n                    name = toCamelCase(name.slice(5));\n                    resultData[name] = dataAttr(element, name, resultData[name]);\n                }\n            }\n        }\n        return resultData;\n    }\n    // 同时设置多个值\n    if (isObjectLike(key)) {\n        return this.each(function () {\n            data(this, key);\n        });\n    }\n    // value 传入了 undefined\n    if (arguments.length === 2 && isUndefined(value)) {\n        return this;\n    }\n    // 设置值\n    if (!isUndefined(value)) {\n        return this.each(function () {\n            data(this, key, value);\n        });\n    }\n    // 获取值\n    if (!this.length) {\n        return undefined;\n    }\n    return dataAttr(this[0], key, data(this[0], key));\n};\n","import $ from 'mdui.jq/es/$';\nimport 'mdui.jq/es/methods/data';\nimport 'mdui.jq/es/methods/removeClass';\nimport 'mdui.jq/es/methods/remove';\nimport '../methods/transitionEnd';\n$.hideOverlay = function (force = false) {\n    const $overlay = $('.mdui-overlay');\n    if (!$overlay.length) {\n        return;\n    }\n    let level = force ? 1 : $overlay.data('_overlay_level');\n    if (level > 1) {\n        $overlay.data('_overlay_level', --level);\n        return;\n    }\n    $overlay\n        .data('_overlay_level', 0)\n        .removeClass('mdui-overlay-show')\n        .data('_overlay_is_deleted', true)\n        .transitionEnd(() => {\n        if ($overlay.data('_overlay_is_deleted')) {\n            $overlay.remove();\n        }\n    });\n};\n","import $ from 'mdui.jq/es/$';\nimport 'mdui.jq/es/methods/addClass';\nimport 'mdui.jq/es/methods/data';\nimport 'mdui.jq/es/methods/width';\nimport { $body } from '../../utils/dom';\n$.lockScreen = function () {\n    // 不直接把 body 设为 box-sizing: border-box，避免污染全局样式\n    const newBodyWidth = $body.width();\n    let level = $body.data('_lockscreen_level') || 0;\n    $body\n        .addClass('mdui-locked')\n        .width(newBodyWidth)\n        .data('_lockscreen_level', ++level);\n};\n","import $ from 'mdui.jq/es/$';\nimport 'mdui.jq/es/methods/each';\n$.fn.reflow = function () {\n    return this.each(function () {\n        return this.clientLeft;\n    });\n};\n","import $ from 'mdui.jq/es/$';\nimport { isUndefined } from 'mdui.jq/es/utils';\nimport 'mdui.jq/es/methods/data';\nimport 'mdui.jq/es/methods/css';\nimport 'mdui.jq/es/methods/appendTo';\nimport 'mdui.jq/es/methods/addClass';\nimport '../methods/reflow';\n$.showOverlay = function (zIndex) {\n    let $overlay = $('.mdui-overlay');\n    if ($overlay.length) {\n        $overlay.data('_overlay_is_deleted', false);\n        if (!isUndefined(zIndex)) {\n            $overlay.css('z-index', zIndex);\n        }\n    }\n    else {\n        if (isUndefined(zIndex)) {\n            zIndex = 2000;\n        }\n        $overlay = $('<div class=\"mdui-overlay\">')\n            .appendTo(document.body)\n            .reflow()\n            .css('z-index', zIndex);\n    }\n    let level = $overlay.data('_overlay_level') || 0;\n    return $overlay.data('_overlay_level', ++level).addClass('mdui-overlay-show');\n};\n","import $ from 'mdui.jq/es/$';\nimport { isNull } from 'mdui.jq/es/utils';\n$.throttle = function (fn, delay = 16) {\n    let timer = null;\n    return function (...args) {\n        if (isNull(timer)) {\n            timer = setTimeout(() => {\n                fn.apply(this, args);\n                timer = null;\n            }, delay);\n        }\n    };\n};\n","import $ from 'mdui.jq/es/$';\nimport 'mdui.jq/es/methods/data';\nimport 'mdui.jq/es/methods/removeClass';\nimport 'mdui.jq/es/methods/width';\nimport { $body } from '../../utils/dom';\n$.unlockScreen = function (force = false) {\n    let level = force ? 1 : $body.data('_lockscreen_level');\n    if (level > 1) {\n        $body.data('_lockscreen_level', --level);\n        return;\n    }\n    $body.data('_lockscreen_level', 0).removeClass('mdui-locked').width('');\n};\n","import $ from '../$';\nimport './each';\nimport { parse } from './utils/event';\n$.fn.trigger = function (type, extraParameters) {\n    const event = parse(type);\n    let eventObject;\n    const eventParams = {\n        bubbles: true,\n        cancelable: true,\n    };\n    const isMouseEvent = ['click', 'mousedown', 'mouseup', 'mousemove'].indexOf(event.type) > -1;\n    if (isMouseEvent) {\n        // Note: MouseEvent 无法传入 detail 参数\n        eventObject = new MouseEvent(event.type, eventParams);\n    }\n    else {\n        eventParams.detail = extraParameters;\n        eventObject = new CustomEvent(event.type, eventParams);\n    }\n    // @ts-ignore\n    eventObject._detail = extraParameters;\n    // @ts-ignore\n    eventObject._ns = event.ns;\n    return this.each(function () {\n        this.dispatchEvent(eventObject);\n    });\n};\n","import { isUndefined } from 'mdui.jq/es/utils';\nconst container = {};\nfunction queue(name, func) {\n    if (isUndefined(container[name])) {\n        container[name] = [];\n    }\n    if (isUndefined(func)) {\n        return container[name];\n    }\n    container[name].push(func);\n}\n/**\n * 从队列中移除第一个函数，并执行该函数\n * @param name 队列满\n */\nfunction dequeue(name) {\n    if (isUndefined(container[name])) {\n        return;\n    }\n    if (!container[name].length) {\n        return;\n    }\n    const func = container[name].shift();\n    func();\n}\nexport { queue, dequeue };\n","import $ from 'mdui.jq/es/$';\nimport contains from 'mdui.jq/es/functions/contains';\nimport extend from 'mdui.jq/es/functions/extend';\nimport 'mdui.jq/es/methods/addClass';\nimport 'mdui.jq/es/methods/append';\nimport 'mdui.jq/es/methods/children';\nimport 'mdui.jq/es/methods/css';\nimport 'mdui.jq/es/methods/each';\nimport 'mdui.jq/es/methods/find';\nimport 'mdui.jq/es/methods/first';\nimport 'mdui.jq/es/methods/hasClass';\nimport 'mdui.jq/es/methods/height';\nimport 'mdui.jq/es/methods/hide';\nimport 'mdui.jq/es/methods/innerHeight';\nimport 'mdui.jq/es/methods/off';\nimport 'mdui.jq/es/methods/on';\nimport 'mdui.jq/es/methods/remove';\nimport 'mdui.jq/es/methods/removeClass';\nimport 'mdui.jq/es/methods/show';\nimport '../../jq_extends/methods/transitionEnd';\nimport '../../jq_extends/static/hideOverlay';\nimport '../../jq_extends/static/lockScreen';\nimport '../../jq_extends/static/showOverlay';\nimport '../../jq_extends/static/throttle';\nimport '../../jq_extends/static/unlockScreen';\nimport { componentEvent } from '../../utils/componentEvent';\nimport { $body, $window } from '../../utils/dom';\nimport { dequeue, queue } from '../../utils/queue';\nconst DEFAULT_OPTIONS = {\n    history: true,\n    overlay: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n    destroyOnClosed: false,\n};\n/**\n * 当前显示的对话框实例\n */\nlet currentInst = null;\n/**\n * 队列名\n */\nconst queueName = '_mdui_dialog';\n/**\n * 窗口是否已锁定\n */\nlet isLockScreen = false;\n/**\n * 遮罩层元素\n */\nlet $overlay;\nclass Dialog {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS);\n        /**\n         * 当前 dialog 的状态\n         */\n        this.state = 'closed';\n        /**\n         * dialog 元素是否是动态添加的\n         */\n        this.append = false;\n        this.$element = $(selector).first();\n        // 如果对话框元素没有在当前文档中，则需要添加\n        if (!contains(document.body, this.$element[0])) {\n            this.append = true;\n            $body.append(this.$element);\n        }\n        extend(this.options, options);\n        // 绑定取消按钮事件\n        this.$element.find('[mdui-dialog-cancel]').each((_, cancel) => {\n            $(cancel).on('click', () => {\n                this.triggerEvent('cancel');\n                if (this.options.closeOnCancel) {\n                    this.close();\n                }\n            });\n        });\n        // 绑定确认按钮事件\n        this.$element.find('[mdui-dialog-confirm]').each((_, confirm) => {\n            $(confirm).on('click', () => {\n                this.triggerEvent('confirm');\n                if (this.options.closeOnConfirm) {\n                    this.close();\n                }\n            });\n        });\n        // 绑定关闭按钮事件\n        this.$element.find('[mdui-dialog-close]').each((_, close) => {\n            $(close).on('click', () => this.close());\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'dialog', this.$element, this);\n    }\n    /**\n     * 窗口宽度变化，或对话框内容变化时，调整对话框位置和对话框内的滚动条\n     */\n    readjust() {\n        if (!currentInst) {\n            return;\n        }\n        const $element = currentInst.$element;\n        const $title = $element.children('.mdui-dialog-title');\n        const $content = $element.children('.mdui-dialog-content');\n        const $actions = $element.children('.mdui-dialog-actions');\n        // 调整 dialog 的 top 和 height 值\n        $element.height('');\n        $content.height('');\n        const elementHeight = $element.height();\n        $element.css({\n            top: `${($window.height() - elementHeight) / 2}px`,\n            height: `${elementHeight}px`,\n        });\n        // 调整 mdui-dialog-content 的高度\n        $content.innerHeight(elementHeight -\n            ($title.innerHeight() || 0) -\n            ($actions.innerHeight() || 0));\n    }\n    /**\n     * hashchange 事件触发时关闭对话框\n     */\n    hashchangeEvent() {\n        if (window.location.hash.substring(1).indexOf('mdui-dialog') < 0) {\n            currentInst.close(true);\n        }\n    }\n    /**\n     * 点击遮罩层关闭对话框\n     * @param event\n     */\n    overlayClick(event) {\n        if ($(event.target).hasClass('mdui-overlay') &&\n            currentInst) {\n            currentInst.close();\n        }\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-dialog-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            this.$element.hide();\n            // 所有对话框都关闭，且当前没有打开的对话框时，解锁屏幕\n            if (!queue(queueName).length && !currentInst && isLockScreen) {\n                $.unlockScreen();\n                isLockScreen = false;\n            }\n            $window.off('resize', $.throttle(this.readjust, 100));\n            if (this.options.destroyOnClosed) {\n                this.destroy();\n            }\n        }\n    }\n    /**\n     * 打开指定对话框\n     */\n    doOpen() {\n        currentInst = this;\n        if (!isLockScreen) {\n            $.lockScreen();\n            isLockScreen = true;\n        }\n        this.$element.show();\n        this.readjust();\n        $window.on('resize', $.throttle(this.readjust, 100));\n        // 打开消息框\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.$element\n            .addClass('mdui-dialog-open')\n            .transitionEnd(() => this.transitionEnd());\n        // 不存在遮罩层元素时，添加遮罩层\n        if (!$overlay) {\n            $overlay = $.showOverlay(5100);\n        }\n        // 点击遮罩层时是否关闭对话框\n        if (this.options.modal) {\n            $overlay.off('click', this.overlayClick);\n        }\n        else {\n            $overlay.on('click', this.overlayClick);\n        }\n        // 是否显示遮罩层，不显示时，把遮罩层背景透明\n        $overlay.css('opacity', this.options.overlay ? '' : 0);\n        if (this.options.history) {\n            // 如果 hash 中原来就有 mdui-dialog，先删除，避免后退历史纪录后仍然有 mdui-dialog 导致无法关闭\n            // 包括 mdui-dialog 和 &mdui-dialog 和 ?mdui-dialog\n            let hash = window.location.hash.substring(1);\n            if (hash.indexOf('mdui-dialog') > -1) {\n                hash = hash.replace(/[&?]?mdui-dialog/g, '');\n            }\n            // 后退按钮关闭对话框\n            if (hash) {\n                window.location.hash = `${hash}${hash.indexOf('?') > -1 ? '&' : '?'}mdui-dialog`;\n            }\n            else {\n                window.location.hash = 'mdui-dialog';\n            }\n            $window.on('hashchange', this.hashchangeEvent);\n        }\n    }\n    /**\n     * 当前对话框是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开对话框\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        // 如果当前有正在打开或已经打开的对话框,或队列不为空，则先加入队列，等旧对话框开始关闭时再打开\n        if ((currentInst &&\n            (currentInst.state === 'opening' || currentInst.state === 'opened')) ||\n            queue(queueName).length) {\n            queue(queueName, () => this.doOpen());\n            return;\n        }\n        this.doOpen();\n    }\n    /**\n     * 关闭对话框\n     */\n    close(historyBack = false) {\n        // historyBack 是否需要后退历史纪录，默认为 `false`。该参数仅内部使用\n        // 为 `false` 时是通过 js 关闭，需要后退一个历史记录\n        // 为 `true` 时是通过后退按钮关闭，不需要后退历史记录\n        // setTimeout 的作用是：\n        // 当同时关闭一个对话框，并打开另一个对话框时，使打开对话框的操作先执行，以使需要打开的对话框先加入队列\n        setTimeout(() => {\n            if (!this.isOpen()) {\n                return;\n            }\n            currentInst = null;\n            this.state = 'closing';\n            this.triggerEvent('close');\n            // 所有对话框都关闭，且当前没有打开的对话框时，隐藏遮罩\n            if (!queue(queueName).length && $overlay) {\n                $.hideOverlay();\n                $overlay = null;\n                // 若仍存在遮罩，恢复遮罩的 z-index\n                $('.mdui-overlay').css('z-index', 2000);\n            }\n            this.$element\n                .removeClass('mdui-dialog-open')\n                .transitionEnd(() => this.transitionEnd());\n            if (this.options.history && !queue(queueName).length) {\n                if (!historyBack) {\n                    window.history.back();\n                }\n                $window.off('hashchange', this.hashchangeEvent);\n            }\n            // 关闭旧对话框，打开新对话框。\n            // 加一点延迟，仅仅为了视觉效果更好。不加延时也不影响功能\n            setTimeout(() => {\n                dequeue(queueName);\n            }, 100);\n        });\n    }\n    /**\n     * 切换对话框打开/关闭状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 获取对话框状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n    /**\n     * 销毁对话框\n     */\n    destroy() {\n        if (this.append) {\n            this.$element.remove();\n        }\n        if (!queue(queueName).length && !currentInst) {\n            if ($overlay) {\n                $.hideOverlay();\n                $overlay = null;\n            }\n            if (isLockScreen) {\n                $.unlockScreen();\n                isLockScreen = false;\n            }\n        }\n    }\n    /**\n     * 对话框内容变化时，需要调用该方法来调整对话框位置和滚动条高度\n     */\n    handleUpdate() {\n        this.readjust();\n    }\n}\nexport { currentInst, Dialog };\n","import $ from 'mdui.jq/es/$';\nimport 'mdui.jq/es/methods/trigger';\n/**\n * 触发组件上的事件\n * @param eventName 事件名\n * @param componentName 组件名\n * @param target 在该元素上触发事件\n * @param instance 组件实例\n * @param parameters 事件参数\n */\nfunction componentEvent(eventName, componentName, target, instance, parameters) {\n    if (!parameters) {\n        parameters = {};\n    }\n    // @ts-ignore\n    parameters.inst = instance;\n    const fullEventName = `${eventName}.mdui.${componentName}`;\n    // jQuery 事件\n    // @ts-ignore\n    if (typeof jQuery !== 'undefined') {\n        // @ts-ignore\n        jQuery(target).trigger(fullEventName, parameters);\n    }\n    const $target = $(target);\n    // mdui.jq 事件\n    $target.trigger(fullEventName, parameters);\n    const eventParams = {\n        bubbles: true,\n        cancelable: true,\n        detail: parameters,\n    };\n    const eventObject = new CustomEvent(fullEventName, eventParams);\n    // @ts-ignore\n    eventObject._detail = parameters;\n    $target[0].dispatchEvent(eventObject);\n}\nexport { componentEvent };\n","import mdui from '../../mdui';\nimport 'mdui.jq/es/methods/on';\nimport { $document } from '../../utils/dom';\nimport { currentInst, Dialog } from './class';\n// esc 按下时关闭对话框\n$document.on('keydown', (event) => {\n    if (currentInst &&\n        currentInst.options.closeOnEsc &&\n        currentInst.state === 'opened' &&\n        event.keyCode === 27) {\n        currentInst.close();\n    }\n});\nmdui.Dialog = Dialog;\n","import $ from 'mdui.jq/es/$';\nimport each from 'mdui.jq/es/functions/each';\nimport extend from 'mdui.jq/es/functions/extend';\nimport 'mdui.jq/es/methods/each';\nimport 'mdui.jq/es/methods/find';\nimport 'mdui.jq/es/methods/on';\nimport mdui from '../../mdui';\nimport './index';\nconst DEFAULT_BUTTON = {\n    text: '',\n    bold: false,\n    close: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClick: () => { },\n};\nconst DEFAULT_OPTIONS = {\n    title: '',\n    content: '',\n    buttons: [],\n    stackedButtons: false,\n    cssClass: '',\n    history: true,\n    overlay: true,\n    modal: false,\n    closeOnEsc: true,\n    destroyOnClosed: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpen: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpened: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClose: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClosed: () => { },\n};\nmdui.dialog = function (options) {\n    var _a, _b;\n    // 合并配置参数\n    options = extend({}, DEFAULT_OPTIONS, options);\n    each(options.buttons, (i, button) => {\n        options.buttons[i] = extend({}, DEFAULT_BUTTON, button);\n    });\n    // 按钮的 HTML\n    let buttonsHTML = '';\n    if ((_a = options.buttons) === null || _a === void 0 ? void 0 : _a.length) {\n        buttonsHTML = `<div class=\"mdui-dialog-actions${options.stackedButtons ? ' mdui-dialog-actions-stacked' : ''}\">`;\n        each(options.buttons, (_, button) => {\n            buttonsHTML +=\n                '<a href=\"javascript:void(0)\" ' +\n                    `class=\"mdui-btn mdui-ripple mdui-text-color-primary ${button.bold ? 'mdui-btn-bold' : ''}\">${button.text}</a>`;\n        });\n        buttonsHTML += '</div>';\n    }\n    // Dialog 的 HTML\n    const HTML = `<div class=\"mdui-dialog ${options.cssClass}\">` +\n        (options.title\n            ? `<div class=\"mdui-dialog-title\">${options.title}</div>`\n            : '') +\n        (options.content\n            ? `<div class=\"mdui-dialog-content\">${options.content}</div>`\n            : '') +\n        buttonsHTML +\n        '</div>';\n    // 实例化 Dialog\n    const instance = new mdui.Dialog(HTML, {\n        history: options.history,\n        overlay: options.overlay,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n        destroyOnClosed: options.destroyOnClosed,\n    });\n    // 绑定按钮事件\n    if ((_b = options.buttons) === null || _b === void 0 ? void 0 : _b.length) {\n        instance.$element\n            .find('.mdui-dialog-actions .mdui-btn')\n            .each((index, button) => {\n            $(button).on('click', () => {\n                options.buttons[index].onClick(instance);\n                if (options.buttons[index].close) {\n                    instance.close();\n                }\n            });\n        });\n    }\n    // 绑定打开关闭事件\n    instance.$element\n        .on('open.mdui.dialog', () => {\n        options.onOpen(instance);\n    })\n        .on('opened.mdui.dialog', () => {\n        options.onOpened(instance);\n    })\n        .on('close.mdui.dialog', () => {\n        options.onClose(instance);\n    })\n        .on('closed.mdui.dialog', () => {\n        options.onClosed(instance);\n    });\n    instance.open();\n    return instance;\n};\n","import extend from 'mdui.jq/es/functions/extend';\nimport { isFunction, isUndefined } from 'mdui.jq/es/utils';\nimport mdui from '../../mdui';\nimport './dialog';\nconst DEFAULT_OPTIONS = {\n    confirmText: 'ok',\n    cancelText: 'cancel',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n};\nmdui.confirm = function (text, title, onConfirm, onCancel, options) {\n    if (isFunction(title)) {\n        options = onCancel;\n        onCancel = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(onCancel)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onCancel = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS, options);\n    return mdui.dialog({\n        title: title,\n        content: text,\n        buttons: [\n            {\n                text: options.cancelText,\n                bold: false,\n                close: options.closeOnCancel,\n                onClick: onCancel,\n            },\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirm,\n            },\n        ],\n        cssClass: 'mdui-dialog-confirm',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n    });\n};\n","import { returnFalse } from 'mdui.jq/es/utils';\nimport 'mdui/es/components/dialog/confirm';\nimport mdui from 'mdui/es/mdui';\nimport MenuAbstract from '../abstracts/menuAbstract';\n\n/**\n * 舍弃草稿\n */\nclass ClearDrafts extends MenuAbstract {\n  static icon = 'delete';\n  static title = '舍弃草稿';\n\n  public onclick(): void {\n    mdui.confirm(\n      '确定要清空内容？',\n      () => {\n        const options = this.editor.options;\n\n        this.editor.setHTML('');\n\n        if (options.autoSave) {\n          window.localStorage.removeItem(options.autoSaveKey!);\n          options.onClearDrafts!();\n        }\n      },\n      returnFalse,\n      {\n        confirmText: '确定',\n        cancelText: '取消',\n      },\n    );\n  }\n}\n\nexport default ClearDrafts;\n","/**\n * 替换 html 特殊字符\n * @param html\n */\nexport function replaceHtmlSymbol(html = ''): string {\n  return html\n    .replace(/</gm, '&lt;')\n    .replace(/>/gm, '&gt;')\n    .replace(/\"/gm, '&quot;');\n}\n","import $ from '../$';\nimport merge from '../functions/merge';\nimport unique from '../functions/unique';\nimport { JQ } from '../JQ';\nimport './get';\n$.fn.add = function (selector) {\n    return new JQ(unique(merge(this.get(), $(selector).get())));\n};\n","import $ from 'mdui.jq/es/$';\nimport { JQ } from 'mdui.jq/es/JQ';\nimport 'mdui.jq/es/methods/add';\nimport 'mdui.jq/es/methods/children';\nimport 'mdui.jq/es/methods/each';\nimport 'mdui.jq/es/methods/is';\nimport 'mdui.jq/es/methods/last';\nimport 'mdui.jq/es/methods/on';\nimport 'mdui.jq/es/methods/remove';\nimport 'mdui.jq/es/methods/text';\nimport MenuAbstract from '../abstracts/menuAbstract';\nimport Editor from '../index';\nimport { replaceHtmlSymbol } from '../utils/str';\n\n/**\n * 代码块\n */\nclass Code extends MenuAbstract {\n  static icon = 'code';\n  static title = '代码块';\n  static disable = ['bold', 'italic', 'head', 'ol', 'ul', 'link', 'image'];\n  private active = false;\n\n  public constructor(editor: Editor, $button: JQ) {\n    super(editor, $button);\n    this.init();\n  }\n\n  private init(): void {\n    this.$container.on('keydown', (event) => {\n      if ((event as KeyboardEvent).keyCode === 13) {\n        // 按回车时，添加 \\n\n        if (this.active) {\n          event.preventDefault();\n\n          const startOffset = this.selection.getRange()!.startOffset;\n\n          this.command.do('insertHTML', '\\n');\n          this.selection.saveRange();\n\n          if (this.selection.getRange()!.startOffset === startOffset) {\n            // 没起作用，再来一次\n            this.command.do('insertHTML', '\\n');\n          }\n\n          // 换行后滚动条回到最左侧\n          this.selection.getContainerElem()[0].scrollLeft = 0;\n        }\n      }\n\n      if ((event as KeyboardEvent).keyCode === 9) {\n        // 按 tab 时，添加四个空格\n        if (this.active) {\n          event.preventDefault();\n          this.command.do('insertHTML', '    ');\n        }\n      }\n    });\n  }\n\n  public onclick(): void {\n    const $rootElem = this.selection.getRootElem();\n\n    if (this.active) {\n      // 若当前是代码块，则每一行都转换为 p 标签\n      const textArray = $rootElem.text().split('\\n');\n      let html = '';\n\n      textArray.forEach((line) => {\n        line = replaceHtmlSymbol(line);\n        html = line ? `<p>${line}</p>${html}` : `<p><br></p>${html}`;\n      });\n\n      this.command.do('replaceRoot', html);\n\n      return;\n    }\n\n    if (!$rootElem.length) {\n      const range = this.selection.getRange()!;\n\n      if (range.collapsed) {\n        // 没有选中任何选区，在最后添加一行\n        this.command.do('appendHTML', '<pre><code><br></code></pre>');\n      } else {\n        // 选中了多行，把多行包裹在同一个 pre 中\n        let text = '';\n        let isInRange = false;\n        let $linesRemove = $();\n\n        this.$container.children().each((_, line) => {\n          const $line = $(line);\n\n          if (!isInRange) {\n            if (\n              $line.is(range.startContainer as HTMLElement) ||\n              $line[0].contains(range.startContainer) ||\n              this.$container.is(range.startContainer as HTMLElement)\n            ) {\n              isInRange = true;\n            }\n          }\n\n          if (isInRange) {\n            text += `${replaceHtmlSymbol($line.text())}\\n`;\n            $linesRemove = $linesRemove.add($line);\n\n            if (\n              $line.is(range.endContainer as HTMLElement) ||\n              $line[0].contains(range.endContainer)\n            ) {\n              return false;\n            }\n          }\n\n          return true;\n        });\n\n        $linesRemove.each((i, line) => {\n          const $line = $(line);\n          if (i < $linesRemove.length - 1) {\n            $line.remove();\n          }\n        });\n\n        this.selection.createRangeByElem($linesRemove.last(), false, true);\n        this.command.do('replaceRoot', `<pre><code>${text}</code></pre>`);\n      }\n\n      return;\n    }\n\n    // 选中单行，需要移除选区内容所有子元素的标签，然后转换为 pre\n    const text = replaceHtmlSymbol($rootElem.text());\n    this.command.do(\n      'replaceRoot',\n      text ? `<pre><code>${text}</code></pre>` : '<pre><code><br></code></pre>',\n    );\n  }\n\n  public isActive(): boolean {\n    this.active = this.selection.getRootElem().is('pre');\n\n    return this.active;\n  }\n}\n\nexport default Code;\n","import 'mdui.jq/es/methods/is';\nimport 'mdui.jq/es/methods/text';\nimport MenuAbstract from '../abstracts/menuAbstract';\nimport { replaceHtmlSymbol } from '../utils/str';\n\n/**\n * 标题\n */\nclass Head extends MenuAbstract {\n  static icon = 'title';\n  static title = '标题';\n  static disable = ['bold', 'italic', 'image'];\n  private active = false;\n\n  public onclick(): void {\n    const $rootElem = this.selection.getRootElem();\n\n    if (this.active) {\n      // 若当前是 h2，则转换为 p\n      const text = $rootElem.text();\n      this.command.do('replaceRoot', text ? `<p>${text}</p>` : '<p><br></p>');\n\n      return;\n    }\n\n    if (!$rootElem.length) {\n      const range = this.selection.getRange()!;\n\n      if (range.collapsed) {\n        // 没有选中任何选区，在最后添加一行\n        this.command.do('appendHTML', '<h2><br></h2>');\n      } else {\n        // 选中了多行，不处理\n      }\n\n      return;\n    }\n\n    // 选中单行，需要移除选区内所有子元素的标签，然后转换为 h2\n    this.command.do(\n      'replaceRoot',\n      `<h2>${replaceHtmlSymbol($rootElem.text())}</h2>`,\n    );\n  }\n\n  public isActive(): boolean {\n    this.active = this.selection.getRootElem().is('h2');\n\n    return this.active;\n  }\n}\n\nexport default Head;\n","// 全局配置参数\nconst globalOptions = {};\n// 全局事件名\nconst ajaxEvents = {\n    ajaxStart: 'start.mdui.ajax',\n    ajaxSuccess: 'success.mdui.ajax',\n    ajaxError: 'error.mdui.ajax',\n    ajaxComplete: 'complete.mdui.ajax',\n};\nexport { globalOptions, ajaxEvents };\n","import $ from '../$';\nimport '../methods/trigger';\nimport { isString, isUndefined } from '../utils';\nimport each from './each';\nimport extend from './extend';\nimport param from './param';\nimport { ajaxEvents, globalOptions } from './utils/ajax';\n/**\n * 判断此请求方法是否通过查询字符串提交参数\n * @param method 请求方法，大写\n */\nfunction isQueryStringData(method) {\n    return ['GET', 'HEAD'].indexOf(method) >= 0;\n}\n/**\n * 添加参数到 URL 上，且 URL 中不存在 ? 时，自动把第一个 & 替换为 ?\n * @param url\n * @param query\n */\nfunction appendQuery(url, query) {\n    return `${url}&${query}`.replace(/[&?]{1,2}/, '?');\n}\n/**\n * 合并请求参数，参数优先级：options > globalOptions > defaults\n * @param options\n */\nfunction mergeOptions(options) {\n    // 默认参数\n    const defaults = {\n        url: '',\n        method: 'GET',\n        data: '',\n        processData: true,\n        async: true,\n        cache: true,\n        username: '',\n        password: '',\n        headers: {},\n        xhrFields: {},\n        statusCode: {},\n        dataType: 'text',\n        contentType: 'application/x-www-form-urlencoded',\n        timeout: 0,\n        global: true,\n    };\n    // globalOptions 中的回调函数不合并\n    each(globalOptions, (key, value) => {\n        const callbacks = [\n            'beforeSend',\n            'success',\n            'error',\n            'complete',\n            'statusCode',\n        ];\n        // @ts-ignore\n        if (callbacks.indexOf(key) < 0 && !isUndefined(value)) {\n            defaults[key] = value;\n        }\n    });\n    return extend({}, defaults, options);\n}\n/**\n * 发送 ajax 请求\n * @param options\n * @example\n```js\najax({\n  method: \"POST\",\n  url: \"some.php\",\n  data: { name: \"John\", location: \"Boston\" }\n}).then(function( msg ) {\n  alert( \"Data Saved: \" + msg );\n});\n```\n */\nfunction ajax(options) {\n    // 是否已取消请求\n    let isCanceled = false;\n    // 事件参数\n    const eventParams = {};\n    // 参数合并\n    const mergedOptions = mergeOptions(options);\n    let url = mergedOptions.url || window.location.toString();\n    const method = mergedOptions.method.toUpperCase();\n    let data = mergedOptions.data;\n    const processData = mergedOptions.processData;\n    const async = mergedOptions.async;\n    const cache = mergedOptions.cache;\n    const username = mergedOptions.username;\n    const password = mergedOptions.password;\n    const headers = mergedOptions.headers;\n    const xhrFields = mergedOptions.xhrFields;\n    const statusCode = mergedOptions.statusCode;\n    const dataType = mergedOptions.dataType;\n    const contentType = mergedOptions.contentType;\n    const timeout = mergedOptions.timeout;\n    const global = mergedOptions.global;\n    // 需要发送的数据\n    // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换\n    if (data &&\n        (isQueryStringData(method) || processData) &&\n        !isString(data) &&\n        !(data instanceof ArrayBuffer) &&\n        !(data instanceof Blob) &&\n        !(data instanceof Document) &&\n        !(data instanceof FormData)) {\n        data = param(data);\n    }\n    // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中\n    if (data && isQueryStringData(method)) {\n        // 查询字符串拼接到 URL 中\n        url = appendQuery(url, data);\n        data = null;\n    }\n    /**\n     * 触发事件和回调函数\n     * @param event\n     * @param params\n     * @param callback\n     * @param args\n     */\n    function trigger(event, params, callback, ...args) {\n        // 触发全局事件\n        if (global) {\n            $(document).trigger(event, params);\n        }\n        // 触发 ajax 回调和事件\n        let result1;\n        let result2;\n        if (callback) {\n            // 全局回调\n            if (callback in globalOptions) {\n                // @ts-ignore\n                result1 = globalOptions[callback](...args);\n            }\n            // 自定义回调\n            if (mergedOptions[callback]) {\n                // @ts-ignore\n                result2 = mergedOptions[callback](...args);\n            }\n            // beforeSend 回调返回 false 时取消 ajax 请求\n            if (callback === 'beforeSend' &&\n                (result1 === false || result2 === false)) {\n                isCanceled = true;\n            }\n        }\n    }\n    // XMLHttpRequest 请求\n    function XHR() {\n        let textStatus;\n        return new Promise((resolve, reject) => {\n            // GET/HEAD 请求的缓存处理\n            if (isQueryStringData(method) && !cache) {\n                url = appendQuery(url, `_=${Date.now()}`);\n            }\n            // 创建 XHR\n            const xhr = new XMLHttpRequest();\n            xhr.open(method, url, async, username, password);\n            if (contentType ||\n                (data && !isQueryStringData(method) && contentType !== false)) {\n                xhr.setRequestHeader('Content-Type', contentType);\n            }\n            // 设置 Accept\n            if (dataType === 'json') {\n                xhr.setRequestHeader('Accept', 'application/json, text/javascript');\n            }\n            // 添加 headers\n            if (headers) {\n                each(headers, (key, value) => {\n                    // undefined 值不发送，string 和 null 需要发送\n                    if (!isUndefined(value)) {\n                        xhr.setRequestHeader(key, value + ''); // 把 null 转换成字符串\n                    }\n                });\n            }\n            // 检查是否是跨域请求，跨域请求时不添加 X-Requested-With\n            const crossDomain = /^([\\w-]+:)?\\/\\/([^/]+)/.test(url) &&\n                RegExp.$2 !== window.location.host;\n            if (!crossDomain) {\n                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n            }\n            if (xhrFields) {\n                each(xhrFields, (key, value) => {\n                    // @ts-ignore\n                    xhr[key] = value;\n                });\n            }\n            eventParams.xhr = xhr;\n            eventParams.options = mergedOptions;\n            let xhrTimeout;\n            xhr.onload = function () {\n                if (xhrTimeout) {\n                    clearTimeout(xhrTimeout);\n                }\n                // AJAX 返回的 HTTP 响应码是否表示成功\n                const isHttpStatusSuccess = (xhr.status >= 200 && xhr.status < 300) ||\n                    xhr.status === 304 ||\n                    xhr.status === 0;\n                let responseData;\n                if (isHttpStatusSuccess) {\n                    if (xhr.status === 204 || method === 'HEAD') {\n                        textStatus = 'nocontent';\n                    }\n                    else if (xhr.status === 304) {\n                        textStatus = 'notmodified';\n                    }\n                    else {\n                        textStatus = 'success';\n                    }\n                    if (dataType === 'json') {\n                        try {\n                            responseData =\n                                method === 'HEAD' ? undefined : JSON.parse(xhr.responseText);\n                            eventParams.data = responseData;\n                        }\n                        catch (err) {\n                            textStatus = 'parsererror';\n                            trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, textStatus);\n                            reject(new Error(textStatus));\n                        }\n                        if (textStatus !== 'parsererror') {\n                            trigger(ajaxEvents.ajaxSuccess, eventParams, 'success', responseData, textStatus, xhr);\n                            resolve(responseData);\n                        }\n                    }\n                    else {\n                        responseData =\n                            method === 'HEAD'\n                                ? undefined\n                                : xhr.responseType === 'text' || xhr.responseType === ''\n                                    ? xhr.responseText\n                                    : xhr.response;\n                        eventParams.data = responseData;\n                        trigger(ajaxEvents.ajaxSuccess, eventParams, 'success', responseData, textStatus, xhr);\n                        resolve(responseData);\n                    }\n                }\n                else {\n                    textStatus = 'error';\n                    trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, textStatus);\n                    reject(new Error(textStatus));\n                }\n                // statusCode\n                each([globalOptions.statusCode, statusCode], (_, func) => {\n                    if (func && func[xhr.status]) {\n                        if (isHttpStatusSuccess) {\n                            func[xhr.status](responseData, textStatus, xhr);\n                        }\n                        else {\n                            func[xhr.status](xhr, textStatus);\n                        }\n                    }\n                });\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, textStatus);\n            };\n            xhr.onerror = function () {\n                if (xhrTimeout) {\n                    clearTimeout(xhrTimeout);\n                }\n                trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, xhr.statusText);\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, 'error');\n                reject(new Error(xhr.statusText));\n            };\n            xhr.onabort = function () {\n                let statusText = 'abort';\n                if (xhrTimeout) {\n                    statusText = 'timeout';\n                    clearTimeout(xhrTimeout);\n                }\n                trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, statusText);\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, statusText);\n                reject(new Error(statusText));\n            };\n            // ajax start 回调\n            trigger(ajaxEvents.ajaxStart, eventParams, 'beforeSend', xhr);\n            if (isCanceled) {\n                reject(new Error('cancel'));\n                return;\n            }\n            // Timeout\n            if (timeout > 0) {\n                xhrTimeout = setTimeout(() => {\n                    xhr.abort();\n                }, timeout);\n            }\n            // 发送 XHR\n            xhr.send(data);\n        });\n    }\n    return XHR();\n}\nexport default ajax;\n","import { isObjectLike } from '../utils';\nimport each from './each';\n/**\n * 将数组或对象序列化，序列化后的字符串可作为 URL 查询字符串使用\n *\n * 若传入数组，则格式必须和 serializeArray 方法的返回值一样\n * @param obj 对象或数组\n * @example\n```js\nparam({ width: 1680, height: 1050 });\n// width=1680&height=1050\n```\n * @example\n```js\nparam({ foo: { one: 1, two: 2 }})\n// foo[one]=1&foo[two]=2\n```\n * @example\n```js\nparam({ids: [1, 2, 3]})\n// ids[]=1&ids[]=2&ids[]=3\n```\n * @example\n```js\nparam([\n  {\"name\":\"name\",\"value\":\"mdui\"},\n  {\"name\":\"password\",\"value\":\"123456\"}\n])\n// name=mdui&password=123456\n```\n */\nfunction param(obj) {\n    if (!isObjectLike(obj) && !Array.isArray(obj)) {\n        return '';\n    }\n    const args = [];\n    function destructure(key, value) {\n        let keyTmp;\n        if (isObjectLike(value)) {\n            each(value, (i, v) => {\n                if (Array.isArray(value) && !isObjectLike(v)) {\n                    keyTmp = '';\n                }\n                else {\n                    keyTmp = i;\n                }\n                destructure(`${key}[${keyTmp}]`, v);\n            });\n        }\n        else {\n            if (value == null || value === '') {\n                keyTmp = '=';\n            }\n            else {\n                keyTmp = `=${encodeURIComponent(value)}`;\n            }\n            args.push(encodeURIComponent(key) + keyTmp);\n        }\n    }\n    if (Array.isArray(obj)) {\n        each(obj, function () {\n            destructure(this.name, this.value);\n        });\n    }\n    else {\n        each(obj, destructure);\n    }\n    return args.join('&');\n}\nexport default param;\n","import $ from '../../$';\nimport unique from '../../functions/unique';\nimport { JQ } from '../../JQ';\nimport { isElement } from '../../utils';\nimport '../each';\nimport '../is';\nexport default function dir($elements, nameIndex, node, selector, filter) {\n    const ret = [];\n    let target;\n    $elements.each((_, element) => {\n        target = element[node];\n        // 不能包含最顶层的 document 元素\n        while (target && isElement(target)) {\n            // prevUntil, nextUntil, parentsUntil\n            if (nameIndex === 2) {\n                if (selector && $(target).is(selector)) {\n                    break;\n                }\n                if (!filter || $(target).is(filter)) {\n                    ret.push(target);\n                }\n            }\n            // prev, next, parent\n            else if (nameIndex === 0) {\n                if (!selector || $(target).is(selector)) {\n                    ret.push(target);\n                }\n                break;\n            }\n            // prevAll, nextAll, parents\n            else {\n                if (!selector || $(target).is(selector)) {\n                    ret.push(target);\n                }\n            }\n            // @ts-ignore\n            target = target[node];\n        }\n    });\n    return new JQ(unique(ret));\n}\n","import $ from '../$';\nimport each from '../functions/each';\nimport dir from './utils/dir';\neach(['', 'All', 'Until'], (nameIndex, name) => {\n    $.fn[`next${name}`] = function (selector, filter) {\n        return dir(this, nameIndex, 'nextElementSibling', selector, filter);\n    };\n});\n","import extend from 'mdui.jq/es/functions/extend';\nimport { isFunction, isUndefined } from 'mdui.jq/es/utils';\nimport mdui from '../../mdui';\nimport './dialog';\nconst DEFAULT_OPTIONS = {\n    confirmText: 'ok',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnConfirm: true,\n};\nmdui.alert = function (text, title, onConfirm, options) {\n    if (isFunction(title)) {\n        options = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS, options);\n    return mdui.dialog({\n        title: title,\n        content: text,\n        buttons: [\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirm,\n            },\n        ],\n        cssClass: 'mdui-dialog-alert',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n    });\n};\n","import $ from 'mdui.jq/es/$';\nimport { isUndefined } from 'mdui.jq/es/utils';\nconst GUID = {};\n$.guid = function (name) {\n    if (!isUndefined(name) && !isUndefined(GUID[name])) {\n        return GUID[name];\n    }\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    const guid = '_' +\n        s4() +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        s4() +\n        s4();\n    if (!isUndefined(name)) {\n        GUID[name] = guid;\n    }\n    return guid;\n};\n","import $ from 'mdui.jq/es/$';\nimport ajax from 'mdui.jq/es/functions/ajax';\nimport { JQ } from 'mdui.jq/es/JQ';\nimport 'mdui.jq/es/methods/find';\nimport 'mdui.jq/es/methods/html';\nimport 'mdui.jq/es/methods/insertAfter';\nimport 'mdui.jq/es/methods/is';\nimport 'mdui.jq/es/methods/next';\nimport 'mdui.jq/es/methods/on';\nimport 'mdui.jq/es/methods/remove';\nimport 'mdui.jq/es/methods/val';\nimport 'mdui.jq/es/methods/trigger';\nimport 'mdui/es/components/dialog/alert';\nimport { Dialog } from 'mdui/es/components/dialog/class';\nimport 'mdui/es/components/dialog/dialog';\nimport mdui from 'mdui/es/mdui';\nimport 'mdui/es/jq_extends/static/guid';\nimport MenuAbstract from '../abstracts/menuAbstract';\nimport Editor from '../index';\nimport { memoryFormat } from '../utils/format';\n\nclass Image extends MenuAbstract {\n  static icon = 'image';\n  static title = '插入图片';\n\n  /**\n   * <input type=\"file\"/> 元素\n   */\n  private $input: JQ = $();\n\n  /**\n   * <input type=\"file\"/> 元素的 ID\n   */\n  private inputID: string = $.guid();\n\n  /**\n   * 允许上传的图片后缀\n   */\n  private suffixs: string[] = [];\n\n  /**\n   * 允许上传的图片格式\n   */\n  private accepts: string[] = [];\n\n  public constructor(editor: Editor, $button: JQ) {\n    super(editor, $button);\n\n    this.setAccepts();\n    this.setInput();\n    this.bindInputChange();\n    this.bindKeyboardEvent();\n  }\n\n  private bindKeyboardEvent(): void {\n    this.$container.on('keydown', (event) => {\n      const keyCode = (event as KeyboardEvent).keyCode;\n\n      this.selection.saveRange();\n\n      const $curElem = this.selection.getContainerElem();\n\n      if (keyCode === 8 || keyCode === 46) {\n        if ($curElem.is('figcaption')) {\n          // 在 figcaption 元素中按删除键时，若该元素内容为空，则不删除\n          const html = $curElem.html().toLowerCase().trim();\n\n          if (!html || html === '<br>' || html === '<br/>') {\n            $curElem.html('');\n\n            event.preventDefault();\n          }\n        }\n      }\n\n      if ($curElem.is('figure')) {\n        if (keyCode === 8 || keyCode === 46) {\n          // 删除图片时，删除 figure 元素，并聚焦到下一行\n          this.selection.createRangeByElem($curElem.next());\n          $curElem.remove();\n          this.selection.restore();\n        }\n\n        event.preventDefault();\n      }\n\n      if (keyCode === 13) {\n        // 在 figcaption 中按回车键时，跳出图片元素，聚焦到下一个 root 元素\n        if ($curElem.is('figcaption')) {\n          const $nextElem = this.selection.getRootElem().next();\n\n          if (!$nextElem.length) {\n            // 没有下一个元素，新增一行\n            this.command.do('insertAfterRoot', '<p><br></p>');\n          } else {\n            // 有下一个元素，聚焦到下一行\n            this.selection.createRangeByElem($nextElem);\n            this.selection.restore();\n          }\n\n          event.preventDefault();\n        }\n      }\n    });\n\n    this.$container.on('keyup', (event) => {\n      const keyCode = (event as KeyboardEvent).keyCode;\n      const $curElem = this.selection.getContainerElem();\n\n      if (keyCode === 8 || keyCode === 46) {\n        // 在 figcaption 中删除时，若该元素不含文字，则清空该元素\n        if ($curElem.is('figcaption')) {\n          const html = $curElem.html().toLowerCase().trim();\n\n          if (!html || html === '<br>' || html === '<br/>') {\n            $curElem.html('');\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * 设置允许上传的图片类型\n   */\n  private setAccepts(): void {\n    this.suffixs = this.editor.options.imageUploadSuffix!;\n    const map: { [name: string]: string } = {\n      png: 'image/png',\n      jpg: 'image/jpeg',\n      gif: 'image/gif',\n    };\n\n    this.accepts = this.suffixs.map((suffix) => map[suffix]);\n  }\n\n  /**\n   * 在按钮后面插入 <input type=\"file\"/> 元素\n   */\n  private setInput(): void {\n    this.$input = $(\n      `<input type=\"file\" id=\"${this.inputID}\" name=\"${\n        this.editor.options.imageUploadName\n      }\" accept=\"${this.accepts.join(', ')}\"/>`,\n    ).insertAfter(this.$button);\n  }\n\n  /**\n   * 选择文件后触发的事件\n   */\n  private bindInputChange(): void {\n    this.$input.on('change', (event) => {\n      // @ts-ignore\n      const files = event.target.files as FileList;\n\n      if (!files.length) {\n        return;\n      }\n\n      this.upload(files[0]);\n      this.$input.val('');\n    });\n  }\n\n  /**\n   * 执行上传\n   * @param file\n   */\n  private upload(file: File): void {\n    if (this.accepts.indexOf(file.type) < 0) {\n      mdui.alert(`仅允许上传 ${this.suffixs.join(', ')} 格式的图片`);\n\n      return;\n    }\n\n    if (\n      this.editor.options.imageUploadMaxSize! &&\n      file.size > this.editor.options.imageUploadMaxSize!\n    ) {\n      mdui.alert(\n        `图片体积不能超过 ${memoryFormat(\n          this.editor.options.imageUploadMaxSize!,\n        )}`,\n      );\n\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(this.editor.options.imageUploadName!, file);\n\n    let loadingDialog: Dialog;\n    let uploadTime: number;\n    let uploadTimeInterval: any;\n\n    ajax({\n      url: this.editor.options.imageUploadUrl!,\n      method: 'POST',\n      data: formData,\n      processData: false,\n      dataType: 'json',\n      contentType: false,\n      global: false,\n      beforeSend: (xhr) => {\n        uploadTime = 0;\n        uploadTimeInterval = setInterval(() => (uploadTime += 100), 100);\n\n        loadingDialog = mdui.dialog({\n          title: '上传中…',\n          content: '<p class=\"mdui_editor-upload-progress\">0%</p>',\n          history: false,\n          modal: true,\n          cssClass: 'mdui_editor-upload-progress-dialog',\n        });\n\n        const $progress = loadingDialog.$element.find(\n          '.mdui_editor-upload-progress',\n        );\n\n        xhr.upload.onprogress = (event): void => {\n          // @ts-ignore\n          $progress.html(`${((event.loaded / event.total) * 100).toFixed(0)}%`);\n        };\n      },\n      complete: () => {\n        clearInterval(uploadTimeInterval);\n\n        if (uploadTime < 500) {\n          setTimeout(() => {\n            loadingDialog.close();\n          }, 500 - uploadTime);\n        } else {\n          loadingDialog.close();\n        }\n      },\n    })\n      .then((response) => {\n        if (this.editor.options.imageUploadResponseTransform) {\n          response = this.editor.options.imageUploadResponseTransform(response);\n        }\n\n        if (response.code) {\n          mdui.alert(response.message);\n          return;\n        }\n\n        const $rootElem = this.selection.getRootElem();\n        const rootHTML = $rootElem.html().toLowerCase().trim();\n        const imgHTML = `<figure><img src=\"${response.data.url}\"/><figcaption placeholder=\"图片描述（选填）\"></figcaption></figure>`;\n\n        if (\n          $rootElem[0].nodeName === 'P' &&\n          (rootHTML === '<br>' || rootHTML === '<br/>')\n        ) {\n          // 当前为空的 p 元素，替换该元素\n          this.command.do('replaceRoot', imgHTML);\n        } else {\n          // 当前不是空的 p 元素，在当前元素后面插入图片\n          this.command.do('insertAfterRoot', imgHTML);\n        }\n\n        // 在图片下面重新插入一行，并聚焦\n        this.command.do('insertAfterRoot', '<p><br></p>');\n      })\n      .catch(() => mdui.alert('图片上传失败'));\n  }\n\n  public onclick(): void {\n    $(`#${this.inputID}`).trigger('click');\n  }\n}\n\nexport default Image;\n","/**\n * 格式化内存大小\n * @param memory\n */\nexport function memoryFormat(memory: number): string {\n  const units = ['B', 'KB', 'MB', 'GB', 'TB'];\n  let pos = 0;\n\n  while (memory >= 1024) {\n    memory /= 1024;\n    pos++;\n  }\n\n  return memory.toFixed(2) + units[pos];\n}\n","import MenuNativeAbstract from '../abstracts/menuNativeAbstract';\n\n/**\n * 斜体\n */\nclass Italic extends MenuNativeAbstract {\n  static icon = 'format_italic';\n  static title = '斜体';\n  static disable = ['image'];\n\n  protected getCommandName(): string {\n    return 'italic';\n  }\n\n  protected getElementName(): string {\n    return 'em';\n  }\n}\n\nexport default Italic;\n","import $ from '../$';\nimport each from '../functions/each';\nimport './get';\nimport dir from './utils/dir';\neach(['', 's', 'sUntil'], (nameIndex, name) => {\n    $.fn[`parent${name}`] = function (selector, filter) {\n        // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\n        return dir($nodes, nameIndex, 'parentNode', selector, filter);\n    };\n});\n","import data from 'mdui.jq/es/functions/data';\n/**\n * CSS 选择器和初始化函数组成的对象\n */\nconst entries = {};\n/**\n * 注册并执行初始化函数\n * @param selector CSS 选择器\n * @param apiInit 初始化函数\n * @param i 元素索引\n * @param element 元素\n */\nfunction mutation(selector, apiInit, i, element) {\n    let selectors = data(element, '_mdui_mutation');\n    if (!selectors) {\n        selectors = [];\n        data(element, '_mdui_mutation', selectors);\n    }\n    if (selectors.indexOf(selector) === -1) {\n        selectors.push(selector);\n        apiInit.call(element, i, element);\n    }\n}\nexport { entries, mutation };\n","import $ from 'mdui.jq/es/$';\nimport each from 'mdui.jq/es/functions/each';\nimport 'mdui.jq/es/methods/each';\nimport 'mdui.jq/es/methods/find';\nimport 'mdui.jq/es/methods/is';\nimport { entries, mutation } from '../../utils/mutation';\n$.fn.mutation = function () {\n    return this.each((i, element) => {\n        const $this = $(element);\n        each(entries, (selector, apiInit) => {\n            if ($this.is(selector)) {\n                mutation(selector, apiInit, i, element);\n            }\n            $this.find(selector).each((i, element) => {\n                mutation(selector, apiInit, i, element);\n            });\n        });\n    });\n};\n","import $ from 'mdui.jq/es/$';\nimport extend from 'mdui.jq/es/functions/extend';\nimport 'mdui.jq/es/methods/addClass';\nimport 'mdui.jq/es/methods/appendTo';\nimport 'mdui.jq/es/methods/attr';\nimport 'mdui.jq/es/methods/each';\nimport 'mdui.jq/es/methods/find';\nimport 'mdui.jq/es/methods/is';\nimport 'mdui.jq/es/methods/on';\nimport 'mdui.jq/es/methods/outerHeight';\nimport 'mdui.jq/es/methods/parent';\nimport 'mdui.jq/es/methods/parents';\nimport 'mdui.jq/es/methods/remove';\nimport 'mdui.jq/es/methods/removeClass';\nimport 'mdui.jq/es/methods/text';\nimport 'mdui.jq/es/methods/trigger';\nimport 'mdui.jq/es/methods/val';\nimport { isUndefined } from 'mdui.jq/es/utils';\nimport mdui from '../../mdui';\nimport '../../global/mutation';\nimport { $document } from '../../utils/dom';\nconst defaultData = {\n    reInit: false,\n    domLoadedEvent: false,\n};\n/**\n * 输入框事件\n * @param event\n * @param data\n */\nfunction inputEvent(event, data = {}) {\n    data = extend({}, defaultData, data);\n    const input = event.target;\n    const $input = $(input);\n    const eventType = event.type;\n    const value = $input.val();\n    // 文本框类型\n    const inputType = $input.attr('type') || '';\n    if (['checkbox', 'button', 'submit', 'range', 'radio', 'image'].indexOf(inputType) > -1) {\n        return;\n    }\n    const $textfield = $input.parent('.mdui-textfield');\n    // 输入框是否聚焦\n    if (eventType === 'focus') {\n        $textfield.addClass('mdui-textfield-focus');\n    }\n    if (eventType === 'blur') {\n        $textfield.removeClass('mdui-textfield-focus');\n    }\n    // 输入框是否为空\n    if (eventType === 'blur' || eventType === 'input') {\n        value\n            ? $textfield.addClass('mdui-textfield-not-empty')\n            : $textfield.removeClass('mdui-textfield-not-empty');\n    }\n    // 输入框是否禁用\n    input.disabled\n        ? $textfield.addClass('mdui-textfield-disabled')\n        : $textfield.removeClass('mdui-textfield-disabled');\n    // 表单验证\n    if ((eventType === 'input' || eventType === 'blur') &&\n        !data.domLoadedEvent &&\n        input.validity) {\n        input.validity.valid\n            ? $textfield.removeClass('mdui-textfield-invalid-html5')\n            : $textfield.addClass('mdui-textfield-invalid-html5');\n    }\n    // textarea 高度自动调整\n    if ($input.is('textarea')) {\n        // IE bug：textarea 的值仅为多个换行，不含其他内容时，textarea 的高度不准确\n        //         此时，在计算高度前，在值的开头加入一个空格，计算完后，移除空格\n        const inputValue = value;\n        let hasExtraSpace = false;\n        if (inputValue.replace(/[\\r\\n]/g, '') === '') {\n            $input.val(' ' + inputValue);\n            hasExtraSpace = true;\n        }\n        // 设置 textarea 高度\n        $input.outerHeight('');\n        const height = $input.outerHeight();\n        const scrollHeight = input.scrollHeight;\n        if (scrollHeight > height) {\n            $input.outerHeight(scrollHeight);\n        }\n        // 计算完，还原 textarea 的值\n        if (hasExtraSpace) {\n            $input.val(inputValue);\n        }\n    }\n    // 实时字数统计\n    if (data.reInit) {\n        $textfield.find('.mdui-textfield-counter').remove();\n    }\n    const maxLength = $input.attr('maxlength');\n    if (maxLength) {\n        if (data.reInit || data.domLoadedEvent) {\n            $('<div class=\"mdui-textfield-counter\">' +\n                `<span class=\"mdui-textfield-counter-inputed\"></span> / ${maxLength}` +\n                '</div>').appendTo($textfield);\n        }\n        $textfield\n            .find('.mdui-textfield-counter-inputed')\n            .text(value.length.toString());\n    }\n    // 含 帮助文本、错误提示、字数统计 时，增加文本框底部内边距\n    if ($textfield.find('.mdui-textfield-helper').length ||\n        $textfield.find('.mdui-textfield-error').length ||\n        maxLength) {\n        $textfield.addClass('mdui-textfield-has-bottom');\n    }\n}\n$(() => {\n    // 绑定事件\n    $document.on('input focus blur', '.mdui-textfield-input', { useCapture: true }, inputEvent);\n    // 可展开文本框展开\n    $document.on('click', '.mdui-textfield-expandable .mdui-textfield-icon', function () {\n        $(this)\n            .parents('.mdui-textfield')\n            .addClass('mdui-textfield-expanded')\n            .find('.mdui-textfield-input')[0]\n            .focus();\n    });\n    // 可展开文本框关闭\n    $document.on('click', '.mdui-textfield-expanded .mdui-textfield-close', function () {\n        $(this)\n            .parents('.mdui-textfield')\n            .removeClass('mdui-textfield-expanded')\n            .find('.mdui-textfield-input')\n            .val('');\n    });\n    /**\n     * 初始化文本框\n     */\n    mdui.mutation('.mdui-textfield', function () {\n        $(this).find('.mdui-textfield-input').trigger('input', {\n            domLoadedEvent: true,\n        });\n    });\n});\nmdui.updateTextFields = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-textfield') : $(selector);\n    $elements.each((_, element) => {\n        $(element).find('.mdui-textfield-input').trigger('input', {\n            reInit: true,\n        });\n    });\n};\n","import $ from 'mdui.jq/es/$';\nimport 'mdui.jq/es/methods/each';\nimport mdui from '../mdui';\nimport '../jq_extends/methods/mutation';\nimport { isUndefined } from 'mdui.jq/es/utils';\nimport { entries, mutation } from '../utils/mutation';\nmdui.mutation = function (selector, apiInit) {\n    if (isUndefined(selector) || isUndefined(apiInit)) {\n        $(document).mutation();\n        return;\n    }\n    entries[selector] = apiInit;\n    $(selector).each((i, element) => mutation(selector, apiInit, i, element));\n};\n","import extend from 'mdui.jq/es/functions/extend';\nimport 'mdui.jq/es/methods/find';\nimport 'mdui.jq/es/methods/on';\nimport 'mdui.jq/es/methods/val';\nimport { isFunction, isUndefined } from 'mdui.jq/es/utils';\nimport mdui from '../../mdui';\nimport '../textfield';\nimport './dialog';\nconst DEFAULT_OPTIONS = {\n    confirmText: 'ok',\n    cancelText: 'cancel',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n    type: 'text',\n    maxlength: 0,\n    defaultValue: '',\n    confirmOnEnter: false,\n};\nmdui.prompt = function (label, title, onConfirm, onCancel, options) {\n    if (isFunction(title)) {\n        options = onCancel;\n        onCancel = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(onCancel)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onCancel = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS, options);\n    const content = '<div class=\"mdui-textfield\">' +\n        (label ? `<label class=\"mdui-textfield-label\">${label}</label>` : '') +\n        (options.type === 'text'\n            ? `<input class=\"mdui-textfield-input\" type=\"text\" value=\"${options.defaultValue}\" ${options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : ''}/>`\n            : '') +\n        (options.type === 'textarea'\n            ? `<textarea class=\"mdui-textfield-input\" ${options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : ''}>${options.defaultValue}</textarea>`\n            : '') +\n        '</div>';\n    const onCancelClick = (dialog) => {\n        const value = dialog.$element.find('.mdui-textfield-input').val();\n        onCancel(value, dialog);\n    };\n    const onConfirmClick = (dialog) => {\n        const value = dialog.$element.find('.mdui-textfield-input').val();\n        onConfirm(value, dialog);\n    };\n    return mdui.dialog({\n        title,\n        content,\n        buttons: [\n            {\n                text: options.cancelText,\n                bold: false,\n                close: options.closeOnCancel,\n                onClick: onCancelClick,\n            },\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirmClick,\n            },\n        ],\n        cssClass: 'mdui-dialog-prompt',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n        onOpen: (dialog) => {\n            // 初始化输入框\n            const $input = dialog.$element.find('.mdui-textfield-input');\n            mdui.updateTextFields($input);\n            // 聚焦到输入框\n            $input[0].focus();\n            // 捕捉文本框回车键，在单行文本框的情况下触发回调\n            if (options.type !== 'textarea' && options.confirmOnEnter === true) {\n                $input.on('keydown', (event) => {\n                    if (event.keyCode === 13) {\n                        const value = dialog.$element.find('.mdui-textfield-input').val();\n                        onConfirm(value, dialog);\n                        if (options.closeOnConfirm) {\n                            dialog.close();\n                        }\n                        return false;\n                    }\n                    return;\n                });\n            }\n            // 如果是多行输入框，监听输入框的 input 事件，更新对话框高度\n            if (options.type === 'textarea') {\n                $input.on('input', () => dialog.handleUpdate());\n            }\n            // 有字符数限制时，加载完文本框后 DOM 会变化，需要更新对话框高度\n            if (options.maxlength) {\n                dialog.handleUpdate();\n            }\n        },\n    });\n};\n","import 'mdui.jq/es/methods/after';\nimport 'mdui.jq/es/methods/attr';\nimport 'mdui.jq/es/methods/find';\nimport 'mdui.jq/es/methods/is';\nimport { returnFalse } from 'mdui.jq/es/utils';\nimport 'mdui/es/components/dialog/prompt';\nimport 'mdui/es/components/textfield';\nimport mdui from 'mdui/es/mdui';\nimport MenuAbstract from '../abstracts/menuAbstract';\n\n/**\n * 添加链接\n */\nclass Link extends MenuAbstract {\n  static icon = 'link';\n  static title = '插入链接';\n  static disable = ['image'];\n\n  public onclick(): void {\n    const $curElem = this.selection.getContainerElem();\n    let defaultUrl = '';\n\n    if ($curElem.is('a')) {\n      // 当前选区为 a 元素，则选中整个 a 元素\n      this.selection.createRangeByElem($curElem, false, true);\n      defaultUrl = $curElem.attr('href') || '';\n    }\n\n    const dialog = mdui.prompt(\n      '请输入链接地址',\n      (url, dialog): void => {\n        if (!url) {\n          // 链接为空，移除链接\n          this.command.do('unlink');\n          dialog.close();\n          return;\n        }\n\n        const input = dialog.$element.find(\n          '.mdui-textfield-input',\n        )[0] as HTMLInputElement;\n\n        if (input.validity && input.validity.valid) {\n          this.command.do('createLink', url);\n          dialog.close();\n          return;\n        }\n      },\n      returnFalse,\n      {\n        confirmText: '确认',\n        cancelText: '取消',\n        defaultValue: defaultUrl,\n        confirmOnEnter: true,\n        closeOnConfirm: false,\n      },\n    );\n\n    dialog.$element\n      .find('.mdui-textfield-input')\n      .attr('type', 'text')\n      .attr('pattern', '^(https?|ftp|file)://[\\\\S]+\\\\.[\\\\S]+$')\n      .after('<div class=\"mdui-textfield-error\">链接格式错误</div>');\n\n    mdui.updateTextFields(dialog.$element.find('.mdui-textfield'));\n    dialog.handleUpdate();\n  }\n\n  public isActive(): boolean {\n    return this.selection.getContainerElem().is('a');\n  }\n}\n\nexport default Link;\n","import $ from '../$';\nimport each from '../functions/each';\nimport './get';\nimport dir from './utils/dir';\neach(['', 'All', 'Until'], (nameIndex, name) => {\n    $.fn[`prev${name}`] = function (selector, filter) {\n        // prevAll、prevUntil 需要把元素的顺序倒序处理，以便和 jQuery 的结果一致\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\n        return dir($nodes, nameIndex, 'previousElementSibling', selector, filter);\n    };\n});\n","import $ from 'mdui.jq/es/$';\nimport { JQ } from 'mdui.jq/es/JQ';\nimport 'mdui.jq/es/methods/each';\nimport 'mdui.jq/es/methods/is';\nimport 'mdui.jq/es/methods/parent';\nimport 'mdui.jq/es/methods/prev';\nimport 'mdui.jq/es/methods/remove';\nimport MenuAbstract from './menuAbstract';\n\n/**\n * ul、ol 两个功能需要继承该类\n */\nabstract class MenuListAbstract extends MenuAbstract {\n  public disable = ['head', 'code', 'image'];\n\n  /**\n   * 获取元素名称：ol 或 ul\n   */\n  protected abstract getName(): string;\n\n  /**\n   * 获取命令名称\n   */\n  private getCommandName(): string {\n    return this.getName() === 'ol'\n      ? 'insertOrderedList'\n      : 'insertUnorderedList';\n  }\n\n  /**\n   * 验证列表是否被包裹在 <p> 之内，因为可能同时操作多个列表，所以检查所有列表\n   * @param $list\n   */\n  protected moveListToRoot($list: JQ): void {\n    $list.each((_, ol) => {\n      const $parent = $(ol).parent();\n\n      if ($parent.is(this.$container)) {\n        return;\n      }\n\n      this.selection.createRangeByElem($parent, false, true);\n      this.command.do('replaceRoot', ol);\n    });\n  }\n\n  /**\n   * 把纯文本、b、strong、i、em、a 标签包裹的元素移到 p 标签中，移除 br 标签\n   */\n  protected moveElemToP(): void {\n    $(this.$container[0].childNodes).each((_, curElem) => {\n      const $curElem = ($(curElem) as unknown) as JQ;\n      const {\n        nodeType,\n        nodeName,\n        nodeValue,\n        outerHTML,\n      } = (curElem as unknown) as HTMLElement;\n\n      if (nodeType === 3) {\n        // 纯文本，移动到 p 标签中\n        this.selection.createRangeByElem($curElem.prev(), false, true);\n        this.command.do(\n          'insertAfterRoot',\n          nodeValue ? `<p>${nodeValue}</p>` : '<p><br></p>',\n        );\n        $curElem.remove();\n\n        return;\n      }\n\n      if (nodeType !== 1) {\n        // 不是普通 DOM 节点，跳过\n        return;\n      }\n\n      if (['B', 'STRONG', 'I', 'EM', 'A'].indexOf(nodeName) > -1) {\n        // 移动到 p 标签中\n        this.selection.createRangeByElem($curElem, false, true);\n        this.command.do(\n          'replaceRoot',\n          outerHTML ? `<p>${outerHTML}</p>` : '<p><br></p>',\n        );\n\n        return;\n      }\n\n      if (nodeName === 'BR') {\n        // 移除 br 元素\n        $curElem.remove();\n      }\n    });\n  }\n\n  public onclick(): void {\n    this.command.do(this.getCommandName());\n\n    this.moveListToRoot(this.$container.find(this.getName()));\n    this.moveElemToP();\n  }\n\n  public isActive(): boolean {\n    return document.queryCommandState(this.getCommandName());\n  }\n}\n\nexport default MenuListAbstract;\n","import 'mdui.jq/es/methods/find';\nimport MenuListAbstract from '../abstracts/menuListAbstract';\n\n/**\n * 有序列表\n */\nclass Ol extends MenuListAbstract {\n  static icon = 'format_list_numbered';\n  static title = '有序列表';\n\n  protected getName(): string {\n    return 'ol';\n  }\n}\n\nexport default Ol;\n","import 'mdui.jq/es/methods/find';\nimport MenuListAbstract from '../abstracts/menuListAbstract';\n\n/**\n * 无序列表\n */\nclass Ul extends MenuListAbstract {\n  static icon = 'format_list_bulleted';\n  static title = '无序列表';\n\n  protected getName(): string {\n    return 'ul';\n  }\n}\n\nexport default Ul;\n","import $ from 'mdui.jq/es/$';\nimport each from 'mdui.jq/es/functions/each';\nimport unique from 'mdui.jq/es/functions/unique';\nimport PlainObject from 'mdui.jq/es/interfaces/PlainObject';\nimport 'mdui.jq/es/methods/addClass';\nimport 'mdui.jq/es/methods/append';\nimport 'mdui.jq/es/methods/appendTo';\nimport 'mdui.jq/es/methods/on';\nimport 'mdui.jq/es/methods/prop';\nimport 'mdui.jq/es/methods/removeClass';\nimport CommonAbstract from '../abstracts/commonAbstract';\nimport MenuAbstract from '../abstracts/menuAbstract';\nimport Editor from '../index';\nimport Bold from './bold';\nimport ClearDrafts from './clear_drafts';\nimport Code from './code';\nimport Head from './head';\nimport Image from './image';\nimport Italic from './italic';\nimport Link from './link';\nimport Ol from './ol';\nimport Ul from './ul';\n\nconst MenuConstructors: PlainObject = {\n  bold: Bold,\n  clear_drafts: ClearDrafts,\n  code: Code,\n  head: Head,\n  image: Image,\n  italic: Italic,\n  link: Link,\n  ol: Ol,\n  ul: Ul,\n};\n\nclass Menus extends CommonAbstract {\n  /**\n   * { 按钮名称: 按钮实例 }\n   */\n  menus: { [name: string]: MenuAbstract } = {};\n\n  public constructor(editor: Editor) {\n    super(editor);\n    this.init();\n  }\n\n  /**\n   * 初始化菜单\n   * @private\n   */\n  private init(): void {\n    this.editor.options.menus!.forEach((name) => {\n      // 插入分隔符\n      if (name === '|') {\n        this.$toolbar.append('<div class=\"mdui_editor-toolbar-divider\"></div>');\n        return;\n      }\n\n      // 插入 spacer\n      if (name === ' ') {\n        this.$toolbar.append('<div class=\"mdui-toolbar-spacer\"></div>');\n        return;\n      }\n\n      const MenuConstructor = MenuConstructors[name];\n\n      if (!MenuConstructor || typeof MenuConstructor !== 'function') {\n        return;\n      }\n\n      // 创建按钮\n      const $button = $(\n        `<button class=\"mdui-btn mdui_editor-toolbar-menu mdui_editor-toolbar-menu-${name}\" type=\"button\" title=\"${MenuConstructor.title}\">` +\n          `<i class=\"mdui-icon material-icons\">${MenuConstructor.icon}</i>` +\n          '</button>',\n      ).appendTo(this.$toolbar);\n\n      // 实例化菜单项\n      const menu = new MenuConstructor(this.editor, $button) as MenuAbstract;\n      this.menus[name] = menu;\n\n      const onClick = (): void => {\n        if (this.selection.getRange() === null) {\n          return;\n        }\n\n        menu.onclick();\n      };\n\n      $button.on('click', onClick);\n    });\n  }\n\n  /**\n   * 修改菜单按钮状态\n   */\n  public changeStatus(): void {\n    let disableMenus: string[] = [];\n\n    each(this.menus, (name: string, menu) => {\n      setTimeout(() => {\n        // 切换激活状态\n        if (menu.isActive()) {\n          menu.$button.addClass('mdui_editor-toolbar-menu-active');\n\n          if (MenuConstructors[name].disable) {\n            disableMenus = disableMenus.concat(MenuConstructors[name].disable);\n          }\n        } else {\n          menu.$button.removeClass('mdui_editor-toolbar-menu-active');\n        }\n\n        // 禁用按钮，遍历到最后一个按钮再统一处理\n        if (\n          name ===\n          this.editor.options.menus![this.editor.options.menus!.length - 1]\n        ) {\n          disableMenus = unique(disableMenus);\n\n          each(this.menus, (name: string, menu) => {\n            menu.$button.prop('disabled', disableMenus.indexOf(name) > -1);\n          });\n        }\n      }, 0);\n    });\n  }\n}\n\nexport default Menus;\n","import $ from 'mdui.jq/es/$';\nimport { JQ } from 'mdui.jq/es/JQ';\nimport 'mdui.jq/es/methods/is';\nimport 'mdui.jq/es/methods/last';\nimport 'mdui.jq/es/methods/parent';\nimport 'mdui.jq/es/methods/parentsUntil';\nimport CommonAbstract from '../abstracts/commonAbstract';\nimport { isWebkit } from '../utils/ua';\n\n/**\n * selection range API\n */\nclass Selection extends CommonAbstract {\n  /**\n   * 当前选区\n   */\n  private currentRange: Range | undefined = undefined;\n\n  /**\n   * 获取 range 对象\n   */\n  public getRange(): Range | undefined {\n    return this.currentRange;\n  }\n\n  /**\n   * 保存选区\n   * @param range 指定的选取。若未指定，则获取当前选区并保存\n   */\n  public saveRange(range?: Range): void {\n    if (range) {\n      // 保存已有选区\n      this.currentRange = range;\n      return;\n    }\n\n    // 获取当前的选区\n    const selection = window.getSelection()!;\n    if (selection.rangeCount === 0) {\n      return;\n    }\n\n    const rangeAt = selection.getRangeAt(0);\n\n    // 判断选区内容是否在编辑内容之内\n    const $containerElem = this.getContainerElem(rangeAt);\n    if (!$containerElem.length) {\n      return;\n    }\n\n    if (this.$container[0].contains($containerElem[0])) {\n      // 是编辑内容之内的\n      this.currentRange = rangeAt;\n    }\n  }\n\n  /**\n   * 折叠选区\n   * @param toStart\n   */\n  public collapseRange(toStart = false): void {\n    const range = this.currentRange;\n\n    if (range) {\n      range.collapse(toStart);\n    }\n  }\n\n  /**\n   * 获取选中区域的文字\n   */\n  public getText(): string {\n    return this.currentRange ? this.currentRange.toString() : '';\n  }\n\n  /**\n   * 获取选区元素的 JQ 对象\n   * @param range\n   */\n  public getContainerElem(range?: Range): JQ {\n    range = range || this.currentRange;\n\n    if (range) {\n      const elem = range.commonAncestorContainer;\n      return $(\n        elem.nodeType === 1\n          ? (elem as HTMLElement)\n          : (elem.parentNode as HTMLElement),\n      );\n    }\n\n    return $();\n  }\n\n  /**\n   * 获取当前选区的最顶级元素的 JQ 对象\n   * @param range\n   */\n  public getRootElem(range?: Range): JQ {\n    const $elem = this.getContainerElem(range);\n\n    if (this.$container.is($elem)) {\n      // 当前选区选中了多个元素，返回 $container\n      return $();\n    }\n\n    if ($elem.parent().is(this.$container)) {\n      // 当前选区的元素就是 root 元素\n      return $elem;\n    }\n\n    return $elem.parentsUntil(this.$container).last();\n  }\n\n  /**\n   * 判断选区是否为空\n   */\n  public isEmpty(): boolean {\n    const range = this.currentRange;\n\n    if (!range || !range.startContainer) {\n      return false;\n    }\n\n    if (range.startContainer !== range.endContainer) {\n      return false;\n    }\n\n    return range.startOffset === range.endOffset;\n  }\n\n  /**\n   * 恢复选区\n   */\n  public restore(): void {\n    const selection = window.getSelection()!;\n\n    selection.removeAllRanges();\n    selection.addRange(this.currentRange!);\n  }\n\n  /**\n   * 创建一个空白（即 &#8203 字符）选区\n   * @param tag 标签名，非 webkit 浏览器不支持插入纯文本，需要指定包裹空白元素的标签\n   */\n  public createEmptyRange(tag = 'strong'): void {\n    const range = this.getRange();\n    let $elem;\n\n    if (!range) {\n      // 当前无 range\n      return;\n    }\n\n    if (!this.isEmpty()) {\n      // 当前选区必须没有内容才可以\n      return;\n    }\n\n    try {\n      // 目前只支持 webkit 内核\n      if (isWebkit()) {\n        // 插入 &#8203\n        this.command.do('insertHTML', '&#8203;');\n        // 修改 offset 位置\n        range.setEnd(range.endContainer, range.endOffset + 1);\n        // 存储\n        this.saveRange(range);\n      } else {\n        $elem = $(`<${tag}>&#8203;</${tag}>`);\n        this.command.do('insertElem', $elem);\n        this.createRangeByElem($elem, true);\n      }\n    } catch (ex) {\n      // 部分情况下会报错，兼容一下\n    }\n  }\n\n  /**\n   * 根据 JQ 对象设置选区\n   * @param $elem\n   * @param toStart   true 光标在开始位置，false 光标在结束位置\n   * @param isContent 是否选中 elem 的内容\n   */\n  public createRangeByElem(\n    $elem: JQ,\n    toStart = false,\n    isContent = false,\n  ): void {\n    if (!$elem.length) {\n      return;\n    }\n\n    const elem = $elem[0];\n    const range = document.createRange();\n\n    if (isContent) {\n      range.selectNodeContents(elem);\n    } else {\n      range.selectNode(elem);\n    }\n\n    range.collapse(toStart);\n\n    this.saveRange(range);\n  }\n}\n\nexport default Selection;\n","/**\n * 是否是 webkit 浏览器\n */\nexport function isWebkit(): boolean {\n  return /webkit/i.test(navigator.userAgent);\n}\n","import { replaceHtmlSymbol } from './str';\n\ntype ClipboardResult = {\n  /**\n   * 纯文本内容\n   */\n  pasteText: string;\n\n  /**\n   * 含 HTML 的内容\n   */\n  pasteHtml: string;\n};\n\n/**\n * 获取剪贴板数据\n * @param event\n */\nfunction getPasteData(event: ClipboardEvent): ClipboardResult {\n  const clipboardData =\n    event.clipboardData ||\n    // @ts-ignore\n    (event.originalEvent && event.originalEvent.clipboardData);\n\n  let pasteText = '';\n  let pasteHtml = '';\n\n  if (clipboardData === null) {\n    // @ts-ignore\n    pasteText = window.clipboardData && window.clipboardData.getData('text');\n  } else {\n    pasteText = clipboardData.getData('text/plain');\n    pasteHtml = clipboardData.getData('text/html');\n  }\n\n  return { pasteText, pasteHtml };\n}\n\n/**\n * 获取粘贴的 HTML\n * @param event\n */\nexport function getPasteHTML(event: ClipboardEvent): string {\n  let { pasteText, pasteHtml } = getPasteData(event);\n\n  if (!pasteHtml && pasteText) {\n    pasteText = replaceHtmlSymbol(pasteText);\n    pasteHtml = pasteText ? `<p>${pasteText}</p>` : '<p><br></p>';\n  }\n\n  return pasteHtml;\n}\n\n/**\n * 获取粘贴的纯文本\n * @param event\n */\nexport function getPasteText(event: ClipboardEvent): string {\n  const { pasteText } = getPasteData(event);\n\n  return replaceHtmlSymbol(pasteText);\n}\n","/**\n * 净化器\n */\nexport function purifier(html: string): string {\n  let result = '';\n\n  // todo 目前直接返回用每一行都用 p 标签包裹的 html，后续开发根据白名单进行过滤\n  html.split('\\n').forEach((line) => {\n    // 移除行内的换行符\n    line = line.replace(/[\\r\\n]/gm, '');\n\n    result += line ? `<p>${line}</p>` : '<p><br></p>';\n  });\n\n  return result;\n}\n"],"names":["t","e","bubbles","cancelable","detail","n","document","createEvent","initCustomEvent","finallyConstructor","callback","constructor","this","then","value","resolve","reason","reject","MouseEvent","initMouseEvent","window","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","prototype","Event","CustomEvent","setTimeoutFunc","setTimeout","isArray","x","Boolean","length","noop","Promise","fn","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","self","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","promise","push","newValue","finale","thisArg","apply","arguments","bind","_unhandledRejectionFn","i","len","Handler","done","ex","prom","promiseFinally","all","arr","args","Array","slice","call","remaining","res","val","race","setImmediate","err","console","warn","globalNS","global","Error","isFunction","target","isString","isNumber","isUndefined","isNull","isWindow","Window","isDocument","Document","isElement","Element","isArrayLike","isObjectLike","toElement","documentElement","toCamelCase","string","replace","_","letter","toUpperCase","toKebabCase","replacer","toLowerCase","getComputedStyleValue","element","name","getComputedStyle","getPropertyValue","isBorderBox","getExtraWidth","direction","extra","const","position","reduce","prev","index","let","prop","parseFloat","getStyle","valueNumber","getBoundingClientRect","getChildNodesArray","parent","tempParent","createElement","innerHTML","childNodes","returnFalse","cssNumber","each","keys","Object","JQ","item","$","selector","test","readyState","body","addEventListener","html","trim","toCreate","li","tr","td","th","tbody","option","childTag","parentTag","indexOf","match","querySelectorAll","getElementById","Node","isNode","extend","object1","objectN","unshift","object","map","elements","concat","unique","result","contains","container","merge","first","second","className","getAttribute","split","filter","cls","classList","setAttribute","nameIndex","$element","get","reverse","$target","parentNode","newItem","cloneNode","existingItem","nextSibling","insertBefore","isPlainText","clone","is","isMatched","matches","msMatchesSelector","$compareWith","compare","remove","removeChild","childLength","child","appendChild","contents","content","key","k","v","removeAttribute","style","set","children","__","childNode","eq","propName","0","1","2","$elements","join","firstElement","find","computedValue","selected","checked","outerHTML","last","foundElements","handlers","mduiElementId","getElementId","parse","type","parts","ns","sort","matcherFor","RegExp","types","func","removeEvent","handler","handlersInElement","id","removeEventListener","proxy","forEach","event","getHandlers","off","on","data","one","_this","origCallback","elementId","useCapture","proxyFn","callFn","elem","_detail","preventDefault","stopPropagation","_ns","_data","add","extraChilds","$result","CommonAbstract","editor","prototypeAccessors","$toolbar","$container","selection","command","Command","do","getRange","restore","customName","execCommand","menus","changeStatus","saveRange","change","insertHTML","queryCommandSupported","range","insertNode","deleteContents","pasteHTML","replaceRoot","$oldElem","getRootElem","$newElem","insertAfter","createRangeByElem","insertAfterRoot","appendHTML","appendTo","insertElem","$elem","MenuAbstract","$button","super","isActive","MenuNativeAbstract","onclick","isSelectionEmpty","isEmpty","createEmptyRange","getElementName","getCommandName","collapseRange","queryCommandState","Bold","$document","$window","$body","addClass","mdui","handleExtraWidth","funcIndex","includeMargin","multiply","getExtraWidthValue","documentMode","clientProp","scrollProp","offsetProp","innerProp","doc","Math","max","hasClass","funcName","margin","isSet","isBoolean","elementIndex","dimension","css","suffix","toString","hide","display","elementDisplay","show","nodeName","defaultDisplay","transitionEnd","that","events","fireCallback","dataNS","setObjectToElement","rbrace","dataAttr","nodeType","JSON","getData","resultData","attrs","attributes","hideOverlay","force","$overlay","level","removeClass","lockScreen","newBodyWidth","width","reflow","clientLeft","showOverlay","zIndex","throttle","delay","timer","unlockScreen","trigger","extraParameters","eventObject","eventParams","isMouseEvent","dispatchEvent","queue","Dialog","options","DEFAULT_OPTIONS","state","append","cancel","triggerEvent","closeOnCancel","close","confirm","closeOnConfirm","history","overlay","modal","closeOnEsc","destroyOnClosed","currentInst","queueName","isLockScreen","eventName","componentName","instance","parameters","inst","fullEventName","jQuery","componentEvent","readjust","$title","$content","$actions","height","elementHeight","top","innerHeight","hashchangeEvent","location","hash","substring","overlayClick","destroy","doOpen","isOpen","open","historyBack","back","shift","dequeue","toggle","getState","handleUpdate","keyCode","DEFAULT_BUTTON","text","bold","onClick","title","buttons","stackedButtons","cssClass","onOpen","onOpened","onClose","onClosed","confirmText","cancelText","dialog","_a","_b","buttonsHTML","HTML","onConfirm","onCancel","ClearDrafts","setHTML","autoSave","localStorage","removeItem","autoSaveKey","onClearDrafts","replaceHtmlSymbol","Code","init","active","startOffset","getContainerElem","scrollLeft","$rootElem","textArray","line","collapsed","isInRange","$linesRemove","$line","startContainer","endContainer","Head","globalOptions","ajaxEvents","isQueryStringData","method","appendQuery","url","query","ajax","textStatus","isCanceled","mergedOptions","defaults","processData","async","cache","username","password","headers","xhrFields","statusCode","dataType","contentType","timeout","mergeOptions","params","result1","result2","ArrayBuffer","Blob","FormData","obj","destructure","keyTmp","encodeURIComponent","param","Date","now","xhrTimeout","xhr","XMLHttpRequest","setRequestHeader","$2","host","onload","clearTimeout","responseData","isHttpStatusSuccess","status","responseText","responseType","response","onerror","statusText","onabort","abort","send","dir","node","alert","GUID","guid","s4","floor","random","Image","setAccepts","setInput","bindInputChange","bindKeyboardEvent","$curElem","next","$nextElem","suffixs","imageUploadSuffix","png","jpg","gif","accepts","$input","files","upload","file","imageUploadMaxSize","size","memory","pos","toFixed","loadingDialog","uploadTime","uploadTimeInterval","formData","imageUploadName","imageUploadUrl","beforeSend","setInterval","$progress","onprogress","loaded","total","complete","clearInterval","imageUploadResponseTransform","code","message","rootHTML","imgHTML","catch","Italic","entries","mutation","apiInit","selectors","$this","defaultData","reInit","domLoadedEvent","inputEvent","input","eventType","inputType","attr","$textfield","disabled","validity","valid","inputValue","hasExtraSpace","outerHeight","scrollHeight","maxLength","parents","focus","updateTextFields","maxlength","defaultValue","confirmOnEnter","prompt","label","Link","defaultUrl","after","MenuListAbstract","getName","moveListToRoot","$list","ol","$parent","moveElemToP","curElem","nodeValue","Ol","Ul","MenuConstructors","clear_drafts","head","image","italic","link","ul","Menus","MenuConstructor","menu","disableMenus","disable","Selection","currentRange","getSelection","rangeCount","rangeAt","getRangeAt","$containerElem","toStart","collapse","getText","commonAncestorContainer","parentsUntil","endOffset","removeAllRanges","addRange","tag","navigator","userAgent","setEnd","isContent","createRange","selectNodeContents","selectNode","getPasteText","clipboardData","originalEvent","pasteText","pasteHtml","getPasteData"],"mappings":"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"}